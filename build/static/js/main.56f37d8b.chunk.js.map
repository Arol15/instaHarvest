{"version":3,"sources":["components/ShareProducts.js","hooks/useForm.js","utils/localStorage.js","hooks/useRequest.js","context/ModalMsgContext.js","form_validation/validation.js","components/UI/Spinner.js","components/SearchMain.js","components/Footer.js","components/Home.js","components/UI/Portal.js","hooks/useModal.js","components/auth/Auth.js","components/profile/ProfileField.js","assets/images/prf-background.jpg","components/profile/ProfileHeader.js","components/UI/EmailConfirmIcon.js","config.js","components/profile/Profile.js","components/product/Product.js","components/product/Products.js","components/NotFoundPage.js","components/profile/PublicProfile.js","components/auth/ResetPassword.js","components/UI/ModalMsg.js","components/chat/UserChatsPage.js","components/UI/DropDownMenu.js","components/chat/Message.js","components/chat/Chat.js","components/auth/AuthModal.js","components/product/AddProduct.js","components/product/UserProducts.js","components/product/ProductDetails.js","components/MainNavbar.js","components/product/EditProduct.js","App.js","reportWebVitals.js","index.js"],"names":["ShareProducts","history","useHistory","onClick","push","useForm","formData","onSubmit","formValidation","useState","formState","setFormState","formErrors","setErrors","event","preventDefault","validationErrors","isValid","Object","keys","length","target","name","value","checkAuth","localStorage","getItem","fetchReducer","currState","action","type","isLoading","errorNum","error","data","responseData","errorMessage","useRequest","useReducer","fetchState","dispatchFetch","sendRequest","useCallback","url","method","body","a","isJwt","headers","Authorization","config","timeout","axios","then","res","err","response","resp","status","refrResp","setItem","access_token","newConfig","ModalMsgContext","React","createContext","ModalMsgContextProvider","props","open","msg","classes","state","setState","Provider","children","validation","errors","password","confirm_pass","test","entries","forEach","key","username","login","email","first_name","city","search_term","profile_addr","product_type","description","Spinner","className","SearchMain","handleSubmit","handleInputChange","useContext","setModalMsgState","useEffect","products","pathname","placeholder","onChange","Footer","Home","Portal","parent","el","useMemo","document","createElement","appendChild","removeChild","ReactDOM","createPortal","active","isOpen","modal","useModal","withBackdrop","useTimer","timeOut","inPlace","backdrop","useRef","closeModal","setMsgState","current","transitionEnd","keyHandler","indexOf","which","clickHandler","addEventListener","window","removeEventListener","setTimeout","activeElement","blur","id","clearTimeout","ref","classnames","Auth","view","inModal","user","afterConfirm","showModal","e","setFormData","console","log","refresh_token","JSON","stringify","saveJSON","image_url","user_id","statesList","map","elem","abbreviation","disabled","to","ProfileFild","editState","setEditState","modalLogin","showModalLogin","onClose","api","sendMsg","update","title","ProfileHeader","image","imageBack","edit","src","prfBack","EmailConfirmIcon","verified","size","color","baseUrl","Profile","profileData","setProfileData","updateProfile","dataEmailReq","errorEmailReq","errorNumEmailReq","sendEmailRequest","updateProfileData","sendMessage","image_back_url","ProfileField","email_verified","last_name","address","zip_code","Product","product","onDelete","prevPath","useLocation","divStyle","border","margin","confirmDelete","product_id","style","price","handleClickEdit","handleClick","Products","location","NotFoundPage","PublicProfile","match","params","addr","find","joined","ResetPassword","reset","token","ModalMsg","setActive","UserChatsPage","chats","chat","i","recipientId","recipient_id","recipientName","recipient_name","recipientImg","recipient_img","DropDownMenu","button","classContainer","classMenu","classActive","clContainer","clMenu","clActive","refer","clickEvent","contains","Message","msgId","onDeleteMsg","createdAt","sender","splitMsg","split","openMenu","setOpenMenu","memo","Chat","dataMsg","errorMsg","errorNumMsg","processMsg","chatMsgs","setChatMsgs","bottom","setNotifState","msg_id","chat_id","msgs","scrollIntoView","parseInt","sender_id","created_at_str","sender_img","rows","AuthModal","setView","switchComponents","SwitchTransition","CSSTransition","addEndListener","node","done","classNames","AddProduct","image_urls","handleAfterConfirm","reload","UserProducts","userProducts","setUserProducts","getProducts","user_products","handleDelete","ProductDetails","info","setInfo","openChat","product_details","lat","lgt","MainNavbar","showProfileMenu","setShowProfileMenu","logoutUser","val","removeItem","confirmLogout","onClickProfile","parse","EditProduct","urls","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.56f37d8b.chunk.js","sourcesContent":["import { useHistory } from \"react-router-dom\";\n\nconst ShareProducts = () => {\n    \n    const history = useHistory();\n\n    return(\n        <div>\n            <button onClick = {() => history.push(\"/add-product\")}>Share</button>\n        </div>\n    )\n}\n\nexport default ShareProducts; ","import { useState } from \"react\";\n\n/**\n *  useForm\n * @see https://github.com/Arol15/instaHarvest/blob/master/API.md#useForm\n */\n\nconst useForm = (formData, onSubmit, formValidation) => {\n  const [formState, setFormState] = useState({ ...formData });\n  const [formErrors, setErrors] = useState({});\n\n  const handleSubmit = (event) => {\n    event && event.preventDefault();\n    const validationErrors = formValidation(formState);\n    const isValid = Object.keys(validationErrors).length === 0;\n    setErrors(validationErrors);\n\n    if (isValid) {\n      onSubmit();\n    }\n  };\n\n  const handleInputChange = (event) => {\n    // event.persist();\n\n    setFormState({ ...formState, [event.target.name]: event.target.value });\n  };\n\n  return [setFormState, handleSubmit, handleInputChange, formState, formErrors];\n};\n\nexport default useForm;\n","export const loadJSON = (key) => key && JSON.parse(localStorage.getItem(key));\n\nexport const saveJSON = (key, data) =>\n  localStorage.setItem(key, JSON.stringify(data));\n\nexport const logout = () => {\n  localStorage.removeItem(\"access_token\");\n  localStorage.removeItem(\"refresh_token\");\n  localStorage.removeItem(\"app_data\");\n};\n\nexport const checkAuth = () =>\n  localStorage.getItem(\"access_token\") && localStorage.getItem(\"refresh_token\");\n","import axios from \"axios\";\nimport { useReducer, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { checkAuth } from \"../utils/localStorage\";\n\nconst fetchReducer = (currState, action) => {\n  switch (action.type) {\n    case \"SEND\":\n      return {\n        ...currState,\n        isLoading: true,\n        errorNum: null,\n        error: null,\n        data: null,\n      };\n    case \"RESPONSE\":\n      return {\n        ...currState,\n        isLoading: false,\n        data: action.responseData,\n      };\n    case \"ERROR\":\n      return {\n        ...currState,\n        isLoading: false,\n        error: action.errorMessage,\n        errorNum: action.errorNum,\n      };\n    default:\n      return;\n  }\n};\n\n/**\n *  useRequest\n * @see https://github.com/Arol15/instaHarvest/blob/master/API.md#useRequest\n */\n\nconst useRequest = () => {\n  const [fetchState, dispatchFetch] = useReducer(fetchReducer, {\n    isLoading: false,\n    error: null,\n    errorNum: null,\n    data: null,\n  });\n\n  const history = useHistory();\n\n  const sendRequest = useCallback(async (url, method, body, isJwt = false) => {\n    if (isJwt) {\n      if (!checkAuth()) {\n        history.push(\"/login\");\n        return;\n      }\n    }\n\n    let headers = {};\n    if (isJwt) {\n      headers.Authorization = \"Bearer \" + localStorage.getItem(\"access_token\");\n    }\n\n    dispatchFetch({ type: \"SEND\" });\n\n    const config = {\n      method: method,\n      url: url,\n      data: body,\n      headers: headers,\n      timeout: 5000,\n    };\n\n    let resp = await axios(config).then(\n      (res) => res,\n      (err) => err.response\n    );\n    // console.log(resp);\n    if (!resp) {\n      dispatchFetch({\n        type: \"ERROR\",\n        errorMessage: \"Something went wrong\",\n        errorNum: 500,\n      });\n      return;\n    }\n\n    if (isJwt && resp.status === 401) {\n      const refrResp = await axios({\n        method: \"post\",\n        url: \"/api/auth/refresh\",\n        data: {},\n        timeout: 5000,\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"refresh_token\"),\n        },\n      }).then(\n        (res) => res,\n        (err) => err.response\n      );\n\n      if (!refrResp) {\n        dispatchFetch({\n          type: \"ERROR\",\n          errorMessage: \"Something went wrong\",\n          errorNum: 500,\n        });\n        return;\n      }\n\n      if (refrResp.status >= 200 && refrResp.status < 300) {\n        localStorage.setItem(\"access_token\", refrResp.data.access_token);\n\n        const newConfig = {\n          ...config,\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"access_token\"),\n          },\n        };\n        resp = await axios(newConfig).then(\n          (res) => res,\n          (err) => err.response\n        );\n        if (!resp) {\n          dispatchFetch({\n            type: \"ERROR\",\n            errorMessage: \"Something went wrong\",\n            errorNum: 500,\n          });\n          return;\n        }\n      } else {\n        resp = refrResp;\n      }\n    }\n    if (resp.status >= 200 && resp.status < 300) {\n      dispatchFetch({\n        type: \"RESPONSE\",\n        responseData: resp.data,\n      });\n    } else if (resp.data.error) {\n      dispatchFetch({\n        type: \"ERROR\",\n        errorMessage: resp.data.error,\n        errorNum: resp.status,\n      });\n    } else if (resp.status === 401) {\n      dispatchFetch({\n        type: \"ERROR\",\n        errorMessage: \"Authorization denied. Please sign in or sign up\",\n        errorNum: 401,\n      });\n    } else if (resp.status === 403) {\n      dispatchFetch({\n        type: \"ERROR\",\n        errorMessage: \"Not enough privileges\",\n        errorNum: 403,\n      });\n    } else {\n      dispatchFetch({\n        type: \"ERROR\",\n        errorMessage: \"Something went wrong\",\n        errorNum: resp.status,\n      });\n    }\n  }, []);\n\n  return [\n    fetchState.isLoading,\n    fetchState.data,\n    fetchState.error,\n    fetchState.errorNum,\n    sendRequest,\n  ];\n};\n\nexport default useRequest;\n","import React, { useState } from \"react\";\n\nconst ModalMsgContext = React.createContext();\n\nconst ModalMsgContextProvider = (props) => {\n  const [state, setState] = useState({\n    open: false,\n    msg: null,\n    classes: null,\n  });\n\n  return (\n    <ModalMsgContext.Provider value={[state, setState]}>\n      {props.children}\n    </ModalMsgContext.Provider>\n  );\n};\n\nexport { ModalMsgContext, ModalMsgContextProvider };\n","const validation = (data) => {\n  const errors = {};\n  if (data.password && data.confirm_pass) {\n    if (data.password !== data.confirm_pass) {\n      errors.confirm_pass = \"Passwords don't match\";\n    }\n    if (!/^[A-z0-9.!?,+]{6,}$/i.test(data.password)) {\n      errors.confirm_pass =\n        \"Password should be at least 6 characters. Allowed characters: A-z 0-9 . , ! ? +\";\n    }\n  }\n  Object.entries(data).forEach(([key, value]) => {\n    if (key === \"username\") {\n      if (!/^[a-z0-9._]{0,}$/.test(value)) {\n        errors.username = \"Allowed characters: a-z 0-9 . _\";\n      }\n    }\n\n    if (key === \"password\") {\n      if (!value) {\n        errors.password = \"Please enter your password\";\n      }\n    }\n    if (key === \"confirm_pass\") {\n      if (!value) {\n        errors.confirm_pass = \"Passwords don't match\";\n      }\n    }\n    if (key === \"login\") {\n      if (!value) {\n        errors.login = \"Please enter your username or email\";\n      }\n    }\n    if (key === \"email\") {\n      if (!value) {\n        errors.email = \"Enter your email\";\n      } else if (!/^[A-Z0-9.,_%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n        errors.email = \"Invalid email address\";\n      }\n    }\n    if (key === \"first_name\") {\n      if (!value) {\n        errors.first_name = \"Please enter you name\";\n      }\n    }\n    if (key === \"state\") {\n      if (!value) {\n        errors.state = \"Please select state\";\n      }\n    }\n    if (key === \"city\") {\n      if (!value) {\n        errors.city = \"Please enter city\";\n      }\n    }\n    if (key === \"body\") {\n      if (!value) {\n        errors.body = \"Please enter something\";\n      }\n    }\n    if (key === \"search_term\") {\n      if (!value) {\n        errors.search_term = \"Please enter location\";\n      } else if (value.length < 2) {\n        errors.search_term = \"Your location is too short\";\n      }\n    }\n    if (key === \"profile_addr\") {\n      if (!value) {\n        errors.profile_addr = \"Field cannot be empty\";\n      }\n    }\n    if (key === \"name\") {\n      if (!value) {\n        errors.name = \"Please enter name\";\n      }\n    }\n    if (key === \"product_type\") {\n      if (!value) {\n        errors.product_type = \"Please select product type\";\n      }\n    }\n    if (key === \"description\") {\n      if (!value) {\n        errors.description = \"Please describe your product\";\n      }\n    }\n  });\n\n  return errors;\n};\n\nexport default validation;\n","import \"./Spinner.css\";\n\nconst Spinner = (props) => {\n  const el = (\n    <div className=\"center\">\n      <div className=\"indicator\">\n        <div className=\"ind-chase-dot\"></div>\n        <div className=\"ind-chase-dot\"></div>\n        <div className=\"ind-chase-dot\"></div>\n        <div className=\"ind-chase-dot\"></div>\n        <div className=\"ind-chase-dot\"></div>\n        <div className=\"ind-chase-dot\"></div>\n      </div>\n    </div>\n  );\n\n  return el;\n};\n\nexport default Spinner;\n","import { useContext, useEffect } from 'react'; \nimport { useHistory } from \"react-router-dom\"; \nimport useForm from \"../hooks/useForm\"; \nimport useRequest from \"../hooks/useRequest\"; \nimport { ModalMsgContext } from \"../context/ModalMsgContext\"; \nimport validation from \"../form_validation/validation\"; \nimport Spinner from \"./UI/Spinner\"; \nimport { checkAuth } from '../utils/localStorage';\n\n\nconst SearchMain = () => {\n\n    const onSubmit = () => {\n        if (checkAuth()) {\n            sendRequest(\"/api/products/get-all-protected\", \"post\", formData, true); \n        } else {\n            sendRequest(\"/api/products/get-all\", \"post\", formData)\n        }\n    }; \n\n    const [\n        setFormData,\n        handleSubmit,\n        handleInputChange,\n        formData,\n        formErrors,\n      ] = useForm({\"search_term\": \"\"}, onSubmit, validation);\n\n\n    const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n    const [, setModalMsgState] = useContext(ModalMsgContext);\n\n    const history = useHistory(); \n    // console.log(data)\n\n    useEffect(() => {\n        if (data && data.products.length === 0) {\n            setModalMsgState({\n                open: true, \n                msg: \"No results per this location\", \n                classes: \"mdl-error\"\n            })\n        } else if (data) {\n           history.push({\n               pathname: \"/search-results\",\n               state: data,\n            });    \n       } else if (error) {\n           setModalMsgState({\n               open: true, \n               msg: error, \n               classes: \"mdl-error\"\n           }); \n       }\n    }, [data, error]);\n\n    return(\n        <>\n        {isLoading && <Spinner />}\n        <form>\n            <input \n            type=\"search\" \n            placeholder=\"Enter your location\" \n            name=\"search_term\" \n            onChange={handleInputChange}\n            value={formData.search_term}\n            />\n            <div className=\"form-danger\">\n                {formErrors.search_term && formErrors.search_term}\n            </div>\n            <button onClick={handleSubmit}>Find</button>\n        </form>\n        </>\n    )\n}\n\nexport default SearchMain; ","const Footer = () => {\n    return (\n        <footer>\n            All Icons and copyrights\n        </footer>\n    )\n}\n\nexport default Footer; ","import ShareProducts from \"./ShareProducts\";\nimport SearchMain from '../components/SearchMain'\nimport Footer from \"../components/Footer\"; \n\nconst Home = () => {\n  \n    return(\n    <div>\n      <h1>Welcome to instaHarvest</h1>\n      <SearchMain />\n      <ShareProducts />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","import { useMemo, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Portal = ({ children, parent }) => {\n  const el = useMemo(() => document.createElement(\"div\"), []);\n  useEffect(() => {\n    const target = parent && parent.appendChild ? parent : document.body;\n    target.appendChild(el);\n\n    return () => {\n      target.removeChild(el);\n    };\n  }, [el, parent]);\n  return ReactDOM.createPortal(children, el);\n};\nexport default Portal;\n","import { useRef, useEffect, useReducer, useContext } from \"react\";\nimport Portal from \"../components/UI/Portal\";\nimport classnames from \"classnames\";\nimport \"./useModal.css\";\nimport { ModalMsgContext } from \"../context/ModalMsgContext\";\n\nconst fetchReducer = (currState, action) => {\n  switch (action.type) {\n    case \"setActive\":\n      return {\n        ...currState,\n        active: action.active,\n      };\n    case \"setChildren\":\n      return {\n        ...currState,\n        children: action.children,\n        classes: action.classes,\n      };\n\n    case \"setOpen\":\n      return {\n        ...currState,\n        isOpen: action.isOpen,\n      };\n    case \"setModal\":\n      return {\n        ...currState,\n        modal: action.modal,\n      };\n    default:\n      break;\n  }\n};\n\n/**\n *  useModal\n * @see https://github.com/Arol15/instaHarvest/blob/master/API.md#useModal\n */\n\nconst useModal = ({ withBackdrop, useTimer, timeOut, inPlace }) => {\n  const [fetchState, dispatchFetch] = useReducer(fetchReducer, {\n    active: false,\n    isOpen: false,\n    children: null,\n    classes: null,\n    modal: null,\n  });\n  const backdrop = useRef(null);\n  const showModal = (children, classes) => {\n    dispatchFetch({ type: \"setOpen\", isOpen: true });\n    dispatchFetch({\n      type: \"setChildren\",\n      children: children,\n      classes: classes,\n    });\n  };\n\n  const closeModal = () => {\n    dispatchFetch({ type: \"setOpen\", isOpen: false });\n  };\n  const [, setMsgState] = useContext(ModalMsgContext);\n\n  useEffect(() => {\n    if (withBackdrop === true) {\n      const { current } = backdrop;\n      const transitionEnd = () =>\n        dispatchFetch({ type: \"setActive\", active: fetchState.isOpen });\n      const keyHandler = (event) =>\n        [27].indexOf(event.which) >= 0 && closeModal();\n      const clickHandler = (event) => event.target === current && closeModal();\n\n      if (current) {\n        current.addEventListener(\"transitionend\", transitionEnd);\n        current.addEventListener(\"click\", clickHandler);\n        window.addEventListener(\"keyup\", keyHandler);\n      }\n\n      return () => {\n        if (current) {\n          current.removeEventListener(\"transitionend\", transitionEnd);\n          current.removeEventListener(\"click\", clickHandler);\n        }\n        window.removeEventListener(\"keyup\", keyHandler);\n      };\n    }\n  }, [fetchState.isOpen, fetchState.modal]);\n\n  useEffect(() => {\n    if (fetchState.isOpen && !withBackdrop && !inPlace) {\n      setMsgState({\n        open: true,\n        msg: fetchState.children,\n        classes: fetchState.classes,\n      });\n    } else if (fetchState.isOpen) {\n      window.setTimeout(() => {\n        document.activeElement.blur();\n        dispatchFetch({ type: \"setActive\", active: fetchState.isOpen });\n      }, 10);\n    }\n  }, [fetchState.isOpen]);\n\n  useEffect(() => {\n    let id;\n    if (fetchState.isOpen && useTimer) {\n      id = setTimeout(\n        () => {\n          closeModal();\n        },\n        timeOut ? timeOut : 5000\n      );\n    }\n    return () => {\n      if (useTimer) {\n        clearTimeout(id);\n      }\n    };\n  }, [fetchState.isOpen]);\n\n  useEffect(() => {\n    if (withBackdrop) {\n      dispatchFetch({\n        type: \"setModal\",\n        modal: (\n          <div>\n            {(fetchState.isOpen || fetchState.active) && (\n              <Portal>\n                <div\n                  ref={backdrop}\n                  className={classnames(\"backdrop\", {\n                    \"bd-active\": fetchState.active && fetchState.isOpen,\n                  })}\n                >\n                  <div\n                    className={classnames(\"modal\", {\n                      \"mdl-active\": fetchState.active && fetchState.isOpen,\n                    })}\n                  >\n                    {fetchState.children}\n                  </div>\n                </div>\n              </Portal>\n            )}\n          </div>\n        ),\n      });\n    } else if (inPlace) {\n      dispatchFetch({\n        type: \"setModal\",\n        modal: (\n          <div\n            className={classnames(\"mdl-inpl\", fetchState.classes, {\n              \"mdl-inpl-active\": fetchState.active && fetchState.isOpen,\n            })}\n          >\n            {fetchState.children}\n          </div>\n        ),\n      });\n    } else {\n      <></>;\n    }\n  }, [fetchState.active, fetchState.isOpen, fetchState.children]);\n\n  return [fetchState.modal, showModal, closeModal, fetchState.isOpen];\n};\n\nexport default useModal;\n","import { useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport useRequest from \"../../hooks/useRequest\";\nimport Spinner from \"../UI/Spinner\";\nimport useModal from \"../../hooks/useModal\";\nimport useForm from \"../../hooks/useForm\";\nimport statesList from \"../../assets/data/states.json\";\nimport validation from \"../../form_validation/validation\";\nimport { checkAuth } from \"../../utils/localStorage\";\nimport { saveJSON } from \"../../utils/localStorage\";\n\nconst Auth = ({ view, inModal, closeModal, user, afterConfirm }) => {\n  const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n  const history = useHistory();\n  const [modal, showModal] = useModal({\n    withBackdrop: false,\n    useTimer: true,\n    inPlace: inModal ? true : false,\n  });\n\n  checkAuth() && !inModal && history.push(\"/profile\");\n\n  const onSubmit = (e) => {\n    sendRequest(\n      view === \"login\" || view === \"confirm\"\n        ? \"/api/auth/login\"\n        : \"/api/auth/signup\",\n      \"post\",\n      formData\n    );\n  };\n\n  const [\n    setFormData,\n    handleSubmit,\n    handleInputChange,\n    formData,\n    formErrors,\n  ] = useForm({}, onSubmit, validation);\n\n  useEffect(() => {\n    if (view === \"login\") {\n      setFormData({ login: \"\", password: \"\" });\n    } else if (view === \"signup\") {\n      setFormData({\n        email: \"\",\n        password: \"\",\n        confirm_pass: \"\",\n        username: \"\",\n        first_name: \"\",\n        state: \"\",\n        city: \"\",\n      });\n    } else if (view === \"confirm\") {\n      setFormData({ login: user, password: \"\" });\n    }\n  }, [view]);\n\n  // useEffect(() => {\n  //   const access_token = localStorage.getItem(\"access_token\");\n  //   if (access_token && !inModal) {\n  //     history.push(\"/profile\");\n  //   }\n  // }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (data) {\n      console.log(data)\n      localStorage.setItem(\"access_token\", data.access_token);\n      localStorage.setItem(\"refresh_token\", data.refresh_token);\n      saveJSON(\"app_data\", {\n        first_name: data.first_name,\n        image_url: data.image_url,\n        user_id: data.user_id\n      });\n      if (afterConfirm) {\n        afterConfirm();\n      }\n      else if (closeModal) {\n        history.push(\"/profile\");\n        closeModal();\n      } else {\n        history.push(\"/profile\");\n        // closeModal()\n      }\n    }\n  }, [data]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (error) {\n      showModal(error, \"mdl-error\");\n    } else if (data && data.msg) {\n      showModal(data.msg, \"mdl-ok\");\n    }\n  }, [error, errorNum, data]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      {modal}\n      {isLoading && <Spinner />}\n      {view === \"login\" && <h1>Log In</h1>}\n      {view === \"signup\" && <h1>Sign Up</h1>}\n      {view === \"confirm\" && <h1>Confirm identity</h1>}\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"auth-inputs\">\n          {view === \"login\" && (\n            <>\n              <input\n                key=\"1\"\n                type=\"text\"\n                placeholder=\"Email/Username\"\n                name=\"login\"\n                onChange={handleInputChange}\n                value={formData.login || \"\"}\n              />\n              <div className=\"form-danger\">\n                {formErrors.login && formErrors.login}\n              </div>\n            </>\n          )}\n\n          {view === \"signup\" && (\n            <>\n              <input\n                type=\"text\"\n                placeholder=\"Username\"\n                name=\"username\"\n                onChange={handleInputChange}\n                value={formData.username || \"\"}\n              />\n              <div className=\"form-danger\">\n                {formErrors.username && formErrors.username}\n              </div>\n            </>\n          )}\n\n          {view === \"signup\" && (\n            <>\n              <input\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                onChange={handleInputChange}\n                value={formData.email || \"\"}\n              />\n              <div className=\"form-danger\">\n                {formErrors.email && formErrors.email}\n              </div>\n            </>\n          )}\n\n          {view === \"confirm\" && <p>{formData.login}</p>}\n          <>\n            <input\n              key=\"4\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              onChange={handleInputChange}\n              value={formData.password || \"\"}\n            />\n            <div className=\"form-danger\">\n              {formErrors.password && formErrors.password}\n            </div>\n          </>\n          {view === \"signup\" && (\n            <>\n              <input\n                key=\"15\"\n                type=\"password\"\n                placeholder=\"Confirm password\"\n                name=\"confirm_pass\"\n                onChange={handleInputChange}\n                value={formData.confirm_pass || \"\"}\n              />\n              <div className=\"form-danger\">\n                {formErrors.confirm_pass && formErrors.confirm_pass}\n              </div>\n              <input\n                key=\"5\"\n                type=\"text\"\n                placeholder=\"First Name\"\n                name=\"first_name\"\n                onChange={handleInputChange}\n                value={formData.first_name || \"\"}\n              />\n              <div className=\"form-danger\">\n                {formErrors.first_name && formErrors.first_name}\n              </div>\n              <select\n                key=\"6\"\n                placeholder=\"State\"\n                name=\"state\"\n                onChange={handleInputChange}\n                value={formData.state || \"\"}\n              >\n                <option key=\"-\" value=\"\">\n                  Select state\n                </option>\n                {statesList.map((elem) => {\n                  return (\n                    <option key={elem.abbreviation} value={statesList.name}>\n                      {elem.name}\n                    </option>\n                  );\n                })}\n              </select>\n              <div className=\"form-danger\">\n                {formErrors.state && formErrors.state}\n              </div>\n              <input\n                key=\"7\"\n                type=\"text\"\n                placeholder=\"City\"\n                name=\"city\"\n                onChange={handleInputChange}\n                value={formData.city || \"\"}\n              />\n              <div className=\"form-danger\">\n                {formErrors.city && formErrors.city}\n              </div>\n            </>\n          )}\n        </div>\n        <input key=\"8\" type=\"submit\" disabled={isLoading} />\n      </form>\n\n      {inModal ? null : view === \"login\" ? (\n        <Link to=\"/signup\">Sign Up</Link>\n      ) : (\n        <Link to=\"/login\">Login</Link>\n      )}\n      <p></p>\n      {view === \"login\" && (\n        <>\n          <Link onClick={closeModal} to=\"/reset_password\">\n            Forgot your password?\n          </Link>\n          <p></p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Auth;\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useRequest, useModal, useForm } from \"../../hooks/hooks\";\nimport Spinner from \"../UI/Spinner\";\nimport Auth from \"../auth/Auth\";\nimport statesList from \"../../assets/data/states.json\";\nimport validation from \"../../form_validation/validation\";\nimport \"./profile.css\";\n\nconst ProfileFild = (props) => {\n  const [editState, setEditState] = useState(false);\n  const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n  const [modalLogin, showModalLogin, onClose] = useModal({\n    withBackdrop: true,\n    useTimer: false,\n    inPlace: false,\n  });\n\n  const onSubmit = () => {\n    sendRequest(`/api/account${props.api}`, props.method, formData, true);\n  };\n\n  const [\n    setFormData,\n    handleSubmit,\n    handleInputChange,\n    formData,\n    formErrors,\n  ] = useForm({ [props.name]: props.value }, onSubmit, validation);\n\n  useEffect(() => {\n    if (error && errorNum !== 401) {\n      props.sendMsg(error, \"mdl-error\");\n    } else if (data && data.msg) {\n      props.sendMsg(data.msg, \"mdl-ok\");\n      props.update();\n      setEditState(false);\n    }\n  }, [data, error]);\n\n  useEffect(() => {\n    if (errorNum === 401) {\n      showModalLogin(\n        <Auth\n          view={\"confirm\"}\n          inModal={true}\n          closeModal={onClose}\n          afterConfirm={handleSubmit}\n          user={props.user}\n        />\n      );\n    }\n  }, [errorNum]);\n\n  return (\n    <>\n      {modalLogin}\n      {isLoading && <Spinner />}\n      <b>{props.title}:</b>\n      {editState ? (\n        <div>\n          <form onSubmit={handleSubmit}>\n            {props.type === \"state\" ? (\n              <select\n                key=\"6\"\n                placeholder=\"State\"\n                name=\"state\"\n                onChange={handleInputChange}\n                value={formData.state || \"\"}\n              >\n                <option key=\"-\" value=\"\">\n                  Select state\n                </option>\n                {statesList.map((elem) => {\n                  return (\n                    <option key={elem.abbreviation} value={statesList.name}>\n                      {elem.name}\n                    </option>\n                  );\n                })}\n              </select>\n            ) : (\n              <>\n                <input\n                  placeholder={\"\"}\n                  type=\"text\"\n                  name={props.name}\n                  onChange={handleInputChange}\n                  value={formData[props.name] || \"\"}\n                ></input>\n                <div className=\"form-danger\">\n                  {formErrors[props.name] && formErrors[props.name]}\n                </div>\n              </>\n            )}\n\n            <div>\n              <input type=\"submit\" disabled={isLoading}></input>\n              <button\n                onClick={() => {\n                  setEditState(false);\n                }}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      ) : (\n        <>\n          {props.value ? props.children : <p>Empty</p>}\n          <a\n            onClick={() => {\n              setEditState(true);\n            }}\n          >\n            Edit\n          </a>\n        </>\n      )}\n\n      <br />\n    </>\n  );\n};\n\nexport default ProfileFild;\n","export default __webpack_public_path__ + \"static/media/prf-background.8ba20b91.jpg\";","import prfBack from \"../../assets/images/prf-background.jpg\";\nimport \"./profile.css\";\n\nconst ProfileHeader = ({ image, imageBack, edit }) => {\n  return (\n    <>\n      <img className=\"prf-back-img\" src={imageBack || prfBack} />\n      <div className=\"prf-img-block\">\n        <img className=\"prf-img\" src={image} />\n        {edit && <div></div>}\n        {edit && <a>Edit</a>}\n      </div>\n    </>\n  );\n};\n\nexport default ProfileHeader;\n","import { VscUnverified } from \"react-icons/vsc\";\nimport { GoVerified } from \"react-icons/go\";\n\nconst EmailConfirmIcon = ({ verified, children }) => {\n  return (\n    <div>\n      {children}\n      <span className=\"tooltip\">\n        {verified ? (\n          <GoVerified size={\"24px\"} color={\"#4e9340\"} />\n        ) : (\n          <VscUnverified size={\"24px\"} />\n        )}\n\n        <span className=\"tooltiptext\">\n          {verified ? \"Email verified\" : \"Email not verified\"}\n        </span>\n      </span>\n    </div>\n  );\n};\n\nexport default EmailConfirmIcon;\n","const config = {\n    baseUrl: \"https://instaharvest.herokuapp.com/\",\n}\n\nexport default config; ","import { useState, useEffect, useContext } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport useRequest from \"../../hooks/useRequest\";\nimport Spinner from \"../UI/Spinner\";\nimport ProfileField from \"./ProfileField\";\nimport ProfileHeader from \"./ProfileHeader\";\nimport EmailConfirmIcon from \"../UI/EmailConfirmIcon\";\nimport { ModalMsgContext } from \"../../context/ModalMsgContext\";\n\nimport config from \"../../config\";\nimport \"./profile.css\";\n\nconst Profile = (props) => {\n  const [profileData, setProfileData] = useState(null);\n  const [updateProfile, setUpdateProfile] = useState(false);\n  const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n  const [\n    ,\n    dataEmailReq,\n    errorEmailReq,\n    errorNumEmailReq,\n    sendEmailRequest,\n  ] = useRequest();\n\n  const [, setMsgState] = useContext(ModalMsgContext);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    sendRequest(\"/api/account/get_profile_private\", \"POST\", {}, true);\n  }, [updateProfile]);\n\n  useEffect(() => {\n    if (data) {\n      setProfileData({ ...data });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (error) {\n      setMsgState({\n        open: true,\n        msg: error,\n        classes: \"mdl-error\",\n      });\n    } else if (data && data.msg) {\n      setMsgState({\n        open: true,\n        msg: data.msg,\n        classes: \"mdl-ok\",\n      });\n    }\n  }, [error, errorNum, data]);\n\n  useEffect(() => {\n    if (errorEmailReq) {\n      setMsgState({\n        open: true,\n        msg: errorEmailReq,\n        classes: \"mdl-error\",\n      });\n    } else if (dataEmailReq && dataEmailReq.msg) {\n      setMsgState({\n        open: true,\n        msg: dataEmailReq.msg,\n        classes: \"mdl-ok\",\n      });\n    }\n  }, [dataEmailReq, errorEmailReq, errorNumEmailReq]);\n\n  const updateProfileData = () => {\n    sendRequest(\"/api/account/get_profile_private\", \"POST\", {}, true);\n  };\n\n  const sendMessage = (msg, classes) => {\n    setMsgState({\n      open: true,\n      msg: msg,\n      classes: classes,\n    });\n  };\n\n  const resendConfirmEmail = () => {\n    sendEmailRequest(\"/api/auth/resend_email\", \"POST\", {}, true);\n  };\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n\n      {profileData && (\n        <>\n          <ProfileHeader\n            image={profileData.image_url}\n            imageBack={profileData.image_back_url}\n            edit={true}\n          />\n          <div className=\"prf-block\">\n            <div className=\"prf-block-col\">\n              <div className=\"\">\n                <h2>Private information</h2>\n                <div className=\"prf-field\">\n                  <ProfileField\n                    name=\"new_email\"\n                    title=\"Email\"\n                    api=\"/request_change_email\"\n                    method=\"POST\"\n                    update={updateProfileData}\n                    sendMsg={sendMessage}\n                    user={profileData.email}\n                    value={profileData.email}\n                  >\n                    <div>\n                      <EmailConfirmIcon verified={profileData.email_verified}>\n                        <p className=\"inline-block\">{profileData.email}</p>\n                      </EmailConfirmIcon>\n                    </div>\n                    <p></p>\n                  </ProfileField>\n                  {!profileData.email_verified && (\n                    <div>\n                      <a onClick={resendConfirmEmail}>\n                        Resend confirmation email\n                      </a>\n                    </div>\n                  )}\n                  <hr />\n                </div>\n\n                <div className=\"prf-field\">\n                  <ProfileField\n                    name=\"username\"\n                    title=\"Username\"\n                    api=\"/edit_username\"\n                    method=\"PATCH\"\n                    update={updateProfileData}\n                    sendMsg={sendMessage}\n                    user={profileData.email}\n                    value={profileData.username}\n                  >\n                    <p>{profileData.username}</p>\n                  </ProfileField>\n                  <hr />\n                </div>\n\n                <div className=\"prf-field\">\n                  <ProfileField\n                    name=\"last_name\"\n                    title=\"Last name\"\n                    api=\"/edit_profile\"\n                    method=\"PATCH\"\n                    update={updateProfileData}\n                    sendMsg={sendMessage}\n                    value={profileData.last_name}\n                  >\n                    <p>{profileData.last_name}</p>\n                  </ProfileField>\n                  <hr />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"prf-block-col\">\n              <div className=\"\">\n                <h2>Public Information</h2>\n                <p></p>\n\n                <div className=\"prf-field\">\n                  <ProfileField\n                    name=\"first_name\"\n                    title=\"First name\"\n                    api=\"/edit_profile\"\n                    method=\"PATCH\"\n                    update={updateProfileData}\n                    sendMsg={sendMessage}\n                    value={profileData.first_name}\n                  >\n                    <p>{profileData.first_name}</p>\n                  </ProfileField>\n                  <hr />\n                </div>\n\n                <div className=\"prf-field\">\n                  <ProfileField\n                    name=\"profile_addr\"\n                    title=\"Profile address\"\n                    api=\"/edit_profile_address\"\n                    method=\"PATCH\"\n                    update={updateProfileData}\n                    sendMsg={sendMessage}\n                    value={profileData.profile_addr}\n                  >\n                    <p>\n                      <Link to={`/profile/${profileData.profile_addr}`}>\n                        {config.baseUrl}\n                        {profileData.profile_addr}\n                      </Link>\n                    </p>\n                  </ProfileField>\n                  <hr />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"prf-block\">\n            <div className=\"prf-block-col\">\n              <h2>Address</h2>\n              <div className=\"prf-field\">\n                <ProfileField\n                  name=\"address\"\n                  title=\"Address\"\n                  api=\"/edit_profile\"\n                  method=\"PATCH\"\n                  update={updateProfileData}\n                  sendMsg={sendMessage}\n                  value={profileData.address}\n                >\n                  <p>{profileData.address}</p>\n                </ProfileField>\n                <hr />\n              </div>\n\n              <div className=\"prf-field\">\n                <ProfileField\n                  name=\"city\"\n                  title=\"City\"\n                  api=\"/edit_profile\"\n                  method=\"PATCH\"\n                  update={updateProfileData}\n                  sendMsg={sendMessage}\n                  value={profileData.city}\n                >\n                  <p>{profileData.city}</p>\n                </ProfileField>\n                <hr />\n              </div>\n\n              <div className=\"prf-field\">\n                <ProfileField\n                  name=\"state\"\n                  title=\"State\"\n                  api=\"/edit_profile\"\n                  method=\"PATCH\"\n                  type=\"state\"\n                  update={updateProfileData}\n                  sendMsg={sendMessage}\n                  value={profileData.state}\n                >\n                  <p>{profileData.state}</p>\n                </ProfileField>\n                <hr />\n              </div>\n\n              <div className=\"prf-field\">\n                <ProfileField\n                  name=\"zip_code\"\n                  title=\"Zip code\"\n                  api=\"/edit_profile\"\n                  method=\"PATCH\"\n                  update={updateProfileData}\n                  sendMsg={sendMessage}\n                  value={profileData.zip_code}\n                >\n                  <p>{profileData.zip_code}</p>\n                </ProfileField>\n                <hr />\n              </div>\n            </div>\n            <div className=\"prf-block-col\"></div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Profile;\n","import { useHistory, useLocation } from \"react-router-dom\"; \nimport { useModal } from \"../../hooks/hooks\";\n\n\nconst Product = ({product, onDelete, user_id}, ) => {\n\n    const history = useHistory(); \n    const location = useLocation(); \n    const prevPath = location.pathname;\n    const divStyle = {\n        border: \"1px solid black\", \n        margin: \"5px\"\n    }\n\n    const [modal, showModal, closeModal] = useModal({\n        withBackdrop: true,\n        useTimer: false,\n        inPlace: false,\n      });\n\n    const handleClick = (product) => {\n        history.push(\"/product-info\", product)\n    }\n\n    const handleClickEdit = (product) => {\n        history.push(\"edit-product\", product)\n    }\n\n     const confirmDelete = (\n        <>\n            <h3>Are you sure to delete?</h3>\n            <button onClick={() => onDelete(product.product_id)}>Yes</button>\n            <button onClick={() => closeModal()}>No</button>\n        </>\n    );\n\n    return (\n        <>\n        {(user_id === product.user_id || prevPath === '/user-products') ? (\n            <div style={divStyle}>\n                {/* <h1>Your product</h1> */}\n                <p>{product.name}</p>\n                <p>{product.description}</p>\n                <p>${product.price}</p>\n                <button onClick={() => handleClickEdit(product)}>Edit Product</button>\n                </div>\n        ) : (\n            <div onClick={() => handleClick(product)} style={divStyle} className=\"product\">\n            <p>{product.name}</p>\n            <p>{product.description}</p>\n            <p>${product.price}</p>\n            </div>)\n        }\n            {prevPath === \"/search-results\" ? null : \n            (<button onClick={() => {\n                showModal(confirmDelete)\n                }\n                }>Delete Product</button>)}\n            {modal}\n        </>\n    )\n}\n\nexport default Product; ","import Product from './Product'; \nimport { useLocation } from \"react-router-dom\"; \n\nconst Products = () => {\n   \n    const location = useLocation(); \n    const products = location.state.products; \n\n    return (\n        <>\n        { location.state.user_id ? (products.map((product) => {\n            return (\n                <div key={product.product_id}>\n                    <Product product = {product} user_id={location.state.user_id}/>\n                </div>\n            )\n        })) : (products.map((product) => {\n            return (\n                <div key={product.product_id}>\n                    <Product product = {product}/>\n                </div>\n            )\n        }))\n    }\n       </>\n    )\n}\n\nexport default Products; \n\n","const NotFoundPage = () => {\n  return <h1>Page Not Found</h1>;\n};\n\nexport default NotFoundPage;\n","import { useEffect } from \"react\";\nimport { useRequest } from \"../../hooks/hooks\";\nimport Spinner from \"../UI/Spinner\";\nimport statesList from \"../../assets/data/states.json\";\nimport EmailConfirmIcon from \"../UI/EmailConfirmIcon\";\nimport ProfileHeader from \"./ProfileHeader\";\nimport \"./profile.css\";\n\nconst PublicProfile = (props) => {\n  const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n\n  useEffect(() => {\n    sendRequest(`/api/account/${props.match.params.addr}`, \"GET\", {});\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      {error && <h1>Profile Not Found</h1>}\n      {data && (\n        <>\n          <ProfileHeader\n            image={data.image_url}\n            imageBack={data.image_back_url}\n            edit={false}\n          />\n          <div className=\"prf-pbl-top\">\n            <EmailConfirmIcon verified={data.email_verified}>\n              <h2 className=\"inline-block\">{data.first_name}</h2>\n            </EmailConfirmIcon>\n\n            <p>\n              {data.city},{\" \"}\n              {statesList.find((elem) => elem.name === data.state).abbreviation}\n            </p>\n            <p>Joined: {data.joined}</p>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default PublicProfile;\n","import { useEffect, useContext } from \"react\";\nimport { useRequest, useForm } from \"../../hooks/hooks\";\nimport validation from \"../../form_validation/validation\";\nimport { useHistory } from \"react-router-dom\";\nimport Spinner from \"../UI/Spinner\";\nimport { ModalMsgContext } from \"../../context/ModalMsgContext\";\n\nconst ResetPassword = (props) => {\n  const history = useHistory();\n  const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n\n  const [, setMsgState] = useContext(ModalMsgContext);\n\n  const onSubmit = () => {\n    if (props.reset) {\n      sendRequest(\"/api/auth/reset_password\", \"POST\", {\n        email: formData.email,\n      });\n    } else {\n      sendRequest(\"/api/auth/reset_password_confirm\", \"POST\", {\n        password: formData.password,\n        token: props.match.params.token,\n      });\n    }\n  };\n\n  const [, handleSubmit, handleInputChange, formData, formErrors] = useForm(\n    props.reset ? { email: \"\" } : { password: \"\", confirm_pass: \"\" },\n    onSubmit,\n    validation\n  );\n\n  useEffect(() => {\n    if (error) {\n      setMsgState({\n        open: true,\n        msg: error,\n        classes: \"mdl-error\",\n      });\n    } else if (data && data.msg) {\n      setMsgState({\n        open: true,\n        msg: data.msg,\n        classes: \"mdl-ok\",\n      });\n      if (props.reset) {\n        history.push(\"/login\");\n      } else {\n        history.push(\"/login\");\n      }\n    }\n  }, [error, errorNum, data]);\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      <h1>Reset Password</h1>\n      {props.reset ? (\n        <>\n          <p>Enter your email address below</p>\n          <form onSubmit={handleSubmit}>\n            <label>Email: </label>\n            <input\n              key=\"9\"\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              onChange={handleInputChange}\n              value={formData.email || \"\"}\n            />\n            <div className=\"form-danger\">\n              {formErrors.email && formErrors.email}\n            </div>\n            <input key=\"8\" type=\"submit\" disabled={isLoading} />\n          </form>\n        </>\n      ) : (\n        <>\n          <form onSubmit={handleSubmit}>\n            <label>New password: </label>\n            <input\n              key=\"4\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              onChange={handleInputChange}\n              value={formData.password || \"\"}\n            />\n            <div className=\"form-danger\">\n              {formErrors.password && formErrors.password}\n            </div>\n\n            <label>Confirm password: </label>\n            <input\n              key=\"15\"\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              name=\"confirm_pass\"\n              onChange={handleInputChange}\n              value={formData.confirm_pass || \"\"}\n            />\n            <div className=\"form-danger\">\n              {formErrors.confirm_pass && formErrors.confirm_pass}\n            </div>\n            <input key=\"87\" type=\"submit\" disabled={isLoading} />\n          </form>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ResetPassword;\n","import { useContext, useState, useEffect } from \"react\";\nimport { ModalMsgContext } from \"../../context/ModalMsgContext\";\nimport Portal from \"./Portal\";\nimport classnames from \"classnames\";\n\nconst ModalMsg = (props) => {\n  const [state, setState] = useContext(ModalMsgContext);\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    if (state.open) {\n      window.setTimeout(() => {\n        document.activeElement.blur();\n        setActive(state.open);\n      }, 10);\n    }\n  }, [state]);\n\n  useEffect(() => {\n    let id;\n    if (state.open) {\n      id = setTimeout(\n        () => {\n          setState({\n            open: false,\n            msg: null,\n            classes: null,\n          });\n        },\n        state.timeOut ? state.timeOut : 7000\n      );\n    }\n    return () => {\n      clearTimeout(id);\n    };\n  }, [state]);\n\n  useEffect(() => {\n    let id;\n    if (state.open) {\n      id = setTimeout(\n        () => {\n          setActive(false);\n        },\n        state.timeOut ? state.timeOut - 1000 : 6000\n      );\n    }\n    return () => {\n      clearTimeout(id);\n    };\n  }, [active]);\n\n  return (\n    <>\n      {(state.open || active) && (\n        <Portal>\n          <div\n            className={classnames(\"mdl-msg\", state.classes, {\n              \"mdl-msg-active\": active,\n            })}\n          >\n            {state.msg}\n          </div>\n        </Portal>\n      )}\n    </>\n  );\n};\n\nexport default ModalMsg;\n","import { useEffect, useContext, useState } from \"react\";\nimport { useRequest } from \"../../hooks/hooks\";\nimport Spinner from \"../UI/Spinner\";\nimport { ModalMsgContext } from \"../../context/ModalMsgContext\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./chat.css\";\n\nconst UserChatsPage = () => {\n  const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n  const [, setModalMsgState] = useContext(ModalMsgContext);\n\n  const history = useHistory();\n  const openChat = (recipientId, recipientName, recipientImg) => {\n    history.push({\n      pathname: `/chats/${recipientName}`,\n      state: {\n        recipientId: recipientId,\n        recipientName: recipientName,\n        recipientImg: recipientImg,\n      },\n    });\n  };\n\n  useEffect(() => {\n    sendRequest(\"/api/chat/get_user_chats\", \"POST\", {}, true);\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      setModalMsgState({\n        open: true,\n        msg: error,\n        classes: \"mdl-error\",\n      });\n    }\n  }, [data, error, errorNum]);\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      {data &&\n        data.chats.map((chat, i) => {\n          return (\n            <div\n              key={i}\n              className=\"prf-user-chats\"\n              onClick={() =>\n                openChat(\n                  chat.recipient_id,\n                  chat.recipient_name,\n                  chat.recipient_img\n                )\n              }\n            >\n              <img className=\"chat-img\" src={chat.recipient_img} />\n              <div>{chat.recipient_name}</div>\n            </div>\n          );\n        })}\n    </>\n  );\n};\n\nexport default UserChatsPage;\n","import { useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport \"./dropDownMenu.css\";\nconst DropDownMenu = ({\n  children,\n  open,\n  button,\n  onClick,\n  classContainer,\n  classMenu,\n  classActive,\n}) => {\n  const [classes] = useState({\n    clContainer: classContainer ? classContainer : \"menu-container\",\n    clMenu: classMenu ? classMenu : \"menu\",\n    clActive: classActive ? classActive : \"menu-active\",\n  });\n\n  const refer = useRef(null);\n  useEffect(() => {\n    const clickEvent = (e) => {\n      if (refer.current !== null && !refer.current.contains(e.target)) {\n        onClick();\n      }\n    };\n    if (open) {\n      window.addEventListener(\"click\", clickEvent);\n\n      return () => {\n        window.removeEventListener(\"click\", clickEvent);\n      };\n    }\n  }, [open]);\n\n  return (\n    <div className={classes.clContainer}>\n      {button}\n      <nav\n        ref={refer}\n        className={classnames(classes.clMenu, { [classes.clActive]: open })}\n      >\n        <div className=\"menu-elements\">{children}</div>\n      </nav>\n    </div>\n  );\n};\n\nexport default DropDownMenu;\n","import { memo, useState } from \"react\";\nimport { MdMoreVert } from \"react-icons/md\";\nimport DropDownMenu from \"../UI/DropDownMenu\";\nimport classnames from \"classnames\";\nimport \"./chat.css\";\n\nconst Message = ({ msgId, onDeleteMsg, body, createdAt, sender, image }) => {\n  const splitMsg = body.split(\"\\n\").map((e, i) => {\n    return <p key={i}>{e}</p>;\n  });\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const deleteMsg = () => {\n    onDeleteMsg(msgId);\n    setOpenMenu(!openMenu);\n  };\n\n  const onClick = () => {\n    setOpenMenu(!openMenu);\n  };\n\n  return (\n    <div\n      className={classnames(\n        \"msg-container\",\n        sender === \"Me\" ? \"msg-cnt-self\" : \"msg-cnt-reciv\"\n      )}\n    >\n      {sender !== \"Me\" && <img className=\"chat-img\" src={image} />}\n      <div\n        className={classnames(\n          \"msg-body\",\n          sender === \"Me\" ? \"msg-body-self\" : \"msg-body-reciv\"\n        )}\n      >\n        {splitMsg}\n        <p>{createdAt}</p>\n      </div>\n      {sender === \"Me\" && (\n        <DropDownMenu\n          open={openMenu}\n          button={\n            <button className=\"msg-menu-button\" onClick={onClick}>\n              <MdMoreVert />\n            </button>\n          }\n          onClick={onClick}\n        >\n          <p onClick={deleteMsg}>Delete</p>\n        </DropDownMenu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Message);\n","import { useState, useEffect, useContext, useRef } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { useRequest, useForm } from \"../../hooks/hooks\";\nimport validation from \"../../form_validation/validation\";\nimport Spinner from \"../UI/Spinner\";\nimport { ModalMsgContext } from \"../../context/ModalMsgContext\";\nimport Message from \"./Message\";\n\nconst Chat = () => {\n  const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n  const [\n    isLoadingMsg,\n    dataMsg,\n    errorMsg,\n    errorNumMsg,\n    processMsg,\n  ] = useRequest();\n  const [chatMsgs, setChatMsgs] = useState(null);\n  const bottom = useRef();\n  const location = useLocation();\n  const history = useHistory();\n  if (!location.state) {\n    history.push(\"/profile/chats\");\n  }\n  const { recipientId, recipientName, recipientImg } = location.state;\n  const onSubmit = (e) => {\n    processMsg(\"/api/chat/send_message\", \"POST\", formData, true);\n  };\n  const [\n    setFormData,\n    handleSubmit,\n    handleInputChange,\n    formData,\n    formErrors,\n  ] = useForm({ body: \"\", recipient_id: recipientId }, onSubmit, validation);\n  const [, setNotifState] = useContext(ModalMsgContext);\n\n  const onDeleteMsg = (msgId) => {\n    processMsg(\"/api/chat/delete_message\", \"DELETE\", { msg_id: msgId }, true);\n  };\n\n  useEffect(() => {\n    sendRequest(\n      \"/api/chat/get_chat_between_users\",\n      \"POST\",\n      {\n        recipient_id: recipientId,\n      },\n      true\n    );\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      setNotifState({\n        open: true,\n        msg: error,\n        classes: \"mdl-error\",\n      });\n    } else if (data) {\n      setFormData({ ...formData, chat_id: data.chat_id });\n      setChatMsgs([...data.msgs]);\n    }\n  }, [error, errorNum, data]);\n\n  useEffect(() => {\n    if (errorMsg) {\n      setNotifState({\n        open: true,\n        msg: errorMsg,\n        classes: \"mdl-error\",\n      });\n    } else if (dataMsg) {\n      sendRequest(\n        \"/api/chat/get_chat_messages\",\n        \"POST\",\n        {\n          chat_id: data.chat_id,\n        },\n        true\n      );\n      setFormData({ ...formData, body: \"\" });\n    }\n  }, [dataMsg, errorMsg, errorNumMsg]);\n\n  useEffect(() => {\n    bottom.current && bottom.current.scrollIntoView();\n  }, [chatMsgs]);\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      <h1>Chat with {recipientName}</h1>\n      <div className=\"chat-scroll\">\n        {chatMsgs &&\n          chatMsgs.map((msg, i) => {\n            const sender =\n              parseInt(msg.sender_id) === parseInt(recipientId)\n                ? recipientName\n                : \"Me\";\n            return (\n              <div key={i} ref={i === chatMsgs.length - 1 ? bottom : null}>\n                <Message\n                  msgId={msg.msg_id}\n                  onDeleteMsg={onDeleteMsg}\n                  createdAt={msg.created_at_str}\n                  sender={sender}\n                  body={msg.body}\n                  image={msg.sender_img}\n                />\n              </div>\n            );\n          })}\n      </div>\n      {\n        <form>\n          <textarea\n            rows={3}\n            type=\"text\"\n            name=\"body\"\n            onChange={handleInputChange}\n            value={formData.body || \"\"}\n          ></textarea>\n          <div className=\"form-danger\">\n            {formErrors.body && formErrors.body}\n          </div>\n          <button onClick={handleSubmit}>Send</button>\n        </form>\n      }\n    </>\n  );\n};\n\nexport default Chat;\n","import { useState } from \"react\";\nimport Auth from \"../../components/auth/Auth\";\nimport \"./auth.css\";\nimport classnames from \"classnames\";\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\";\n\nconst AuthModal = ({closeModal, afterConfirm}) => {\n  const [view, setView] = useState(\"login\");\n\n  const switchComponents = () => {\n    if (view === \"login\") {\n      setView(\"signup\");\n    } else {\n      setView(\"login\");\n    }\n  };\n  return (\n    <div>\n      <button\n        disabled={view === \"login\"}\n        className={classnames(\"authButton\", { active: view === \"login\" })}\n        onClick={switchComponents}\n      >\n        Log In\n      </button>\n      <button\n        disabled={view === \"signup\"}\n        className={classnames(\"authButton\", { active: view === \"signup\" })}\n        onClick={switchComponents}\n      >\n        Sign Up\n      </button>\n\n      <SwitchTransition>\n        <CSSTransition\n          key={view}\n          addEndListener={(node, done) =>\n            node.addEventListener(\"transitionend\", done, false)\n          }\n          classNames=\"fade\"\n        >\n          {view === \"signup\" ? (\n            <Auth view={view} inModal={true} closeModal={closeModal} afterConfirm={afterConfirm}/>\n          ) : (\n            <Auth view={view} inModal={true} closeModal={closeModal} afterConfirm={afterConfirm}/>\n          )}\n        </CSSTransition>\n      </SwitchTransition>\n    </div>\n  );\n};\n\nexport default AuthModal;\n","import { useContext, useEffect } from \"react\"; \nimport validation from '../../form_validation/validation';\nimport { useRequest, useForm } from '../../hooks/hooks'; \nimport { useHistory } from \"react-router-dom\"; \nimport { ModalMsgContext } from '../../context/ModalMsgContext'; \nimport Spinner from \"../UI/Spinner\"; \nimport \"./AddProduct.css\"; \nimport AuthModal from '../auth/AuthModal'; \nimport {useModal} from '../../hooks/hooks'; \nimport { checkAuth } from \"../../utils/localStorage\";\n\n\nconst AddProduct = () => {\n\n    const history = useHistory(); \n    const [ isLoading, data, error, errorNum, sendRequest ] = useRequest(); \n    const [, setModalMsgState] = useContext(ModalMsgContext); \n\n    const [modal, showModal, closeModal] = useModal({\n      withBackdrop: true,\n      useTimer: false,\n      inPlace: false,\n    });\n\n    const onSubmit = () => {\n        sendRequest('/api/products/add-product', \"post\", formData, true);\n    }; \n\n    const [ setFormData, handleSubmit, handleInputChange, formData, formErrors ] = useForm({\n        name: \"\", \n        product_type: \"\", \n        image_urls: [],\n        price: 0, \n        status: \"\", \n        description: \"\"\n    }, onSubmit, validation);\n\n    const handleAfterConfirm = () => { \n      closeModal()\n      window.location.reload();\n    }; \n\n    useEffect(() => {\n      if (!checkAuth()) {\n        showModal(<AuthModal afterConfirm={handleAfterConfirm}/>)\n      }\n    }, [])\n\n    useEffect(() => {\n        if (error) {\n          setModalMsgState({\n            open: true,\n            msg: error,\n            classes: \"mdl-error\",\n          });\n        }\n        else if(data) {\n          setModalMsgState({\n            open: true,\n            msg: \"Product has been added!\",\n            classes: \"mdl-ok\",\n          });\n          history.push(\"/user-products\");\n\n        }\n      }, [data, error, errorNum]);\n    \n    return(\n      <>\n            {isLoading && <Spinner />}\n        <div className=\"add-product\">\n            <h2>Share Your Product</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Name of your product</label>\n                <input \n                placeholder=\"Name\" \n                type=\"text\" \n                name=\"name\" \n                onChange={handleInputChange}\n                value={formData.name}\n                />\n                <div className=\"form-danger\">\n                  {formErrors.name && formErrors.name}\n                </div>\n                <label>Product Type:</label>\n                <select \n                name=\"product_type\" \n                onChange={handleInputChange}\n                value={formData.product_type}\n                >\n                <option>Select Product Type</option>\n                <option>Fruit</option>\n                <option>Vegetable</option>\n                <option>Herb</option>\n                <option>Other</option>\n                </select>\n                <div className=\"form-danger\">\n                  {formErrors.product_type && formErrors.product_type}\n                </div>\n                <label>Pictures</label>\n                <input \n                type=\"file\" \n                name=\"image_urls\" \n                onChange={handleInputChange}\n                value={formData.image_urls}\n                />\n                <label>Price: </label>\n                <input \n                placeholder=\"$0.00\" \n                type=\"number\" \n                name=\"price\" \n                onChange={handleInputChange}\n                value={formData.price}\n                />\n                <label>Description: </label>\n                <textarea \n                placeholder=\"Describe your product\" \n                type=\"textarea\" \n                name=\"description\" \n                onChange={handleInputChange}\n                value={formData.description}\n                />\n                <div className=\"form-danger\">\n                  {formErrors.description && formErrors.description}\n                </div>\n                <button>Add Product</button>\n            </form>\n        </div>\n        {modal}\n      </>\n    )\n}\n\nexport default AddProduct; ","import { useRequest } from \"../../hooks/hooks\";\nimport { useEffect, useState } from \"react\"; \nimport Spinner from '../UI/Spinner';\nimport Product from './Product'; \n\n\nconst UserProducts = () => {\n\n    const [userProducts, setUserProducts] = useState([]);\n    const [isLoading, data, error, errorNum, sendRequest] = useRequest(); \n\n    const getProducts = () => {\n        sendRequest(\"/api/products/products-per-user\", \"post\", null, true)\n    }\n\n    useEffect(() => {\n        getProducts();\n    }, []); \n\n    useEffect(() => {\n        if (data && data.msg === \"deleted\"){\n            getProducts();\n        }\n        else if(data) {\n            setUserProducts(data.user_products)\n        }\n    }, [data])\n\n    const handleDelete = (product_id) => {\n            sendRequest(\"/api/products/delete_product\", \"delete\", {product_id: product_id}, true)\n    }\n\n    console.log(userProducts)\n    return(\n        <div>\n            <h2>All your products are here! </h2>\n            {isLoading && <Spinner />}\n            {userProducts && userProducts.map((product) => {\n                return(\n                    <div key={product.product_id}>\n                        <Product product={product} onDelete={handleDelete}/>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default UserProducts; ","import { useLocation, useHistory } from \"react-router-dom\"; \nimport { useEffect, useState } from \"react\"; \nimport useRequest from \"../../hooks/useRequest\"; \nimport Spinner from '../UI/Spinner'; \nimport { checkAuth } from \"../../utils/localStorage\";\nimport AuthModal from '../auth/AuthModal'; \nimport {useModal} from '../../hooks/hooks'\n\nconst ProductDetails = () => {\n    const history = useHistory(); \n    const location = useLocation(); \n    const user_id = location.state.user_id; \n    const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n    const [info, setInfo] = useState({}); \n\n    const [modal, showModal, closeModal] = useModal({\n        withBackdrop: true,\n        useTimer: false,\n        inPlace: false,\n      });\n\n    const openChat = (recipientId, recipientName, recipientImg) => {\n      history.push({\n        pathname: `/chats/${recipientName}`,\n        state: {\n          recipientId: recipientId,\n          recipientName: recipientName,\n          recipientImg: recipientImg,\n        },\n      });\n    };\n\n    const handleAfterConfirm = () => { \n        openChat(location.state.user_id, info.first_name, info.image_url)\n        window.location.reload();\n    }; \n\n    useEffect(() => {\n        sendRequest(`/api/products/product-location-info/${user_id}`, \"get\"); \n    }, []); \n\n    useEffect(() => {\n        if(data) {\n            setInfo(data.product_details)\n        }\n    }, [data]); \n\n    return (\n        <>\n        <div>\n            {isLoading && <Spinner />}\n            <div>\n                Product: {location.state.name}\n            </div>\n            <p>About this product: {location.state.description}</p>\n            <div>\n                Location for map: {info.lat} and {info.lgt}\n            </div>\n            {checkAuth() ? (  \n                <button onClick={() => openChat(\n                    location.state.user_id, \n                    info.first_name, \n                    info.image_url,\n                )}>Connect with seller</button>) : (\n                    <button onClick={() => showModal(<AuthModal afterConfirm={handleAfterConfirm}/>)}>Connect with Seller</button>\n                )\n            }\n        </div>\n        {modal}\n        </>\n\n    )\n}\n\nexport default ProductDetails; ","import { useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport \"./MainNavbar.css\";\nimport { checkAuth, loadJSON, logout } from \"../utils/localStorage\";\nimport { useModal } from \"../hooks/hooks\";\nimport AuthModal from \"../components/auth/AuthModal\";\nimport DropDownMenu from \"../components/UI/DropDownMenu\";\n\nconst MainNavbar = () => {\n  const history = useHistory();\n\n  const [modal, showModal, closeModal] = useModal({\n    withBackdrop: true,\n    useTimer: false,\n    inPlace: false,\n  });\n\n  const [showProfileMenu, setShowProfileMenu] = useState(false);\n\n  const logoutUser = (val) => {\n    if (val) {\n      \n      logout();\n      history.push(\"/\");\n    }\n    closeModal();\n    setShowProfileMenu(false);\n  };\n\n  const confirmLogout = (\n    <>\n      <p>Are you sure to logout?</p>\n      <button onClick={() => logoutUser(true)}>Yes</button>\n      <button onClick={() => logoutUser(false)}>No</button>\n    </>\n  );\n\n  const onClickProfile = () => {\n    setShowProfileMenu(!showProfileMenu);\n  };\n\n  return (\n    <>\n      <nav className=\"main-navbar\">\n        <div className=\"main-navbar-logo\">\n          <Link to=\"/\">instaHarvest</Link>\n        </div>\n        <div>\n          <Link to=\"/add-product\">Share your Product</Link>\n        </div>\n        {checkAuth() ? (\n          <>\n            <DropDownMenu\n              open={showProfileMenu}\n              button={\n                <div>\n                  <img\n                    className=\"main-navbar-profile\"\n                    src={loadJSON(\"app_data\").image_url}\n                    onClick={onClickProfile}\n                  />\n                </div>\n              }\n              onClick={onClickProfile}\n            >\n              <Link onClick={onClickProfile} to=\"/profile\">\n                Profile\n              </Link>\n\n              <a\n                onClick={() => {\n                  showModal(confirmLogout);\n                }}\n              >\n                Logout\n              </a>\n            </DropDownMenu>\n          </>\n        ) : (\n          <div className=\"main-navbar-links\">\n            <a onClick={() => showModal(<AuthModal closeModal={closeModal} />)}>\n              Sign In\n            </a>\n          </div>\n        )}\n      </nav>\n      {modal}\n    </>\n  );\n};\n\nexport default MainNavbar;\n","import {useLocation, useHistory, Link} from \"react-router-dom\"; \nimport {useEffect, useContext} from \"react\"; \nimport { useRequest, useForm } from '../../hooks/hooks'; \nimport { ModalMsgContext } from '../../context/ModalMsgContext'; \n\nimport validation from '../../form_validation/validation';\nimport './EditProduct.css'; \n\n\nconst EditProduct = () => {\n\n    const location = useLocation(); \n    const history = useHistory(); \n    const product = location.state; \n    // console.log(product)\n\n    const onSubmit = () => {\n        sendRequest(`/api/products/edit-product/${product.product_id}`, \"patch\", formData, true);\n    };\n\n    const [, setModalMsgState] = useContext(ModalMsgContext); \n    const [ isLoading, data, error, errorNum, sendRequest ] = useRequest(); \n    const [ setFormData, handleSubmit, handleInputChange, formData, formErrors ] = useForm({\n        name: product.name, \n        product_type: product.product_type, \n        image_urls: product.urls,\n        price: product.price, \n        status: product.status, \n        description: product.description\n    }, onSubmit, validation);\n\n    useEffect(() => {\n        if (error) {\n          setModalMsgState({\n            open: true,\n            msg: error,\n            classes: \"mdl-error\",\n          });\n        }\n        else if(data) {\n          setModalMsgState({\n            open: true,\n            msg: \"Product has been added!\",\n            classes: \"mdl-ok\",\n          });\n          history.push(\"/user-products\");\n\n        }\n      }, [data, error, errorNum]);\n\n    return(\n        <div className=\"edit-product\">\n            <h2>Edit Your Product</h2>\n            <form onSubmit={handleSubmit}>\n            <label>Name of your product</label>\n                <input \n                placeholder=\"Name\" \n                type=\"text\" \n                name=\"name\" \n                onChange={handleInputChange}\n                value={formData.name}\n                />\n                <label>Product Type:</label>\n                <select \n                name=\"product_type\" \n                onChange={handleInputChange}\n                value={formData.product_type}\n                >\n                <option>Select Product Type</option>\n                <option>Fruit</option>\n                <option>Vegetable</option>\n                <option>Herb</option>\n                <option>Other</option>\n                </select>\n                <label>Pictures</label>\n                <input \n                type=\"file\" \n                name=\"image_urls\" \n                onChange={handleInputChange}\n                value={formData.image_urls}\n                />\n                <label>Price: </label>\n                <input \n                placeholder=\"$0.00\" \n                type=\"number\" \n                name=\"price\" \n                onChange={handleInputChange}\n                value={formData.price}\n                />\n                <label>Description: </label>\n                <textarea \n                placeholder=\"Describe your product\" \n                type=\"textarea\" \n                name=\"description\" \n                onChange={handleInputChange}\n                value={formData.description}\n                />\n                <button>Save Changes</button>\n                <button>\n                    <Link to=\"/user-products\">Cancel</Link>\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default EditProduct; ","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/profile/Profile\";\nimport Products from \"./components/product/Products\";\nimport Auth from \"./components/auth/Auth\";\nimport NotFoundPage from \"./components/NotFoundPage\";\nimport PublicProfile from \"./components/profile/PublicProfile\";\nimport ResetPassword from \"./components/auth/ResetPassword\";\nimport { ModalMsgContextProvider } from \"./context/ModalMsgContext\";\nimport ModalMsg from \"./components/UI/ModalMsg\";\nimport UserChatsPage from \"./components/chat/UserChatsPage\";\nimport Chat from \"./components/chat/Chat\";\nimport AddProduct from \"./components/product/AddProduct\";\nimport UserProducts from \"./components/product/UserProducts\";\nimport ProductDetails from \"./components/product/ProductDetails\";\nimport MainNavbar from \"./components/MainNavbar\";\nimport EditProduct from \"./components/product/EditProduct\"; \n\nfunction App() {\n  return (\n    <ModalMsgContextProvider>\n      <Router>\n      <MainNavbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\">\n            <Auth view=\"login\" />\n          </Route>\n          <Route path=\"/signup\">\n            <Auth view=\"signup\" />\n          </Route>\n          <Route path=\"/profile\" component={Profile} exact />\n          <Route path=\"/add-product\" component={AddProduct} exact />\n          <Route path=\"/user-products\" component={UserProducts} />\n          <Route path=\"/edit-product\" component={EditProduct}/>\n          <Route path=\"/product-info\" component={ProductDetails} />\n          <Route path=\"/chats\" component={UserChatsPage} exact />\n          <Route path=\"/chats/:name\" component={Chat} />\n          <Route path=\"/profile/:addr\" component={PublicProfile} />\n          <Route path=\"/search-results\" component={Products} />\n          <Route path=\"/reset_password\">\n            <ResetPassword reset={true} />\n          </Route>\n          <Route\n            path=\"/reset_password_confirm/:token\"\n            component={ResetPassword}\n          />\n          <Route path=\"*\" component={NotFoundPage} />\n        </Switch>\n        \n      </Router>\n      <ModalMsg />\n    </ModalMsgContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}