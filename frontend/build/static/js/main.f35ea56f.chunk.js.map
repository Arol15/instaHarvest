{"version":3,"sources":["utils/localStorage.js","hooks/useRequest.js","components/ShareProducts.js","components/UI/Spinner.js","components/UI/Portal.js","context/ModalMsgContext.js","hooks/useModal.js","hooks/useForm.js","form_validation/validation.js","components/auth/Auth.js","components/auth/AuthModal.js","components/MainNavbar.js","components/Product.js","components/SearchMain.js","components/Footer.js","components/Home.js","components/profile/ProfileField.js","components/UI/EmailConfirmIcon.js","components/profile/Profile.js","components/Products.js","components/NotFoundPage.js","components/profile/PublicProfile.js","components/auth/ResetPassword.js","components/UI/ModalMsg.js","components/chat/UserChatsPage.js","components/UI/DropDownMenu.js","components/chat/Message.js","components/chat/Chat.js","components/AddProduct.js","components/UserProducts.js","components/ProductDetails.js","App.js","reportWebVitals.js","index.js"],"names":["checkAuth","localStorage","getItem","fetchReducer","currState","action","type","isLoading","errorNum","error","data","responseData","errorMessage","useRequest","useReducer","fetchState","dispatchFetch","history","useHistory","sendRequest","useCallback","url","method","body","a","isJwt","push","headers","Authorization","config","timeout","axios","then","res","err","response","resp","status","console","log","refrResp","setItem","access_token","newConfig","ShareProducts","onClick","Spinner","props","className","Portal","children","parent","el","useMemo","document","createElement","useEffect","target","appendChild","removeChild","ReactDOM","createPortal","ModalMsgContext","React","createContext","ModalMsgContextProvider","useState","open","msg","classes","state","setState","Provider","value","active","isOpen","modal","useModal","withBackdrop","useTimer","timeOut","inPlace","backdrop","useRef","closeModal","useContext","setMsgState","current","transitionEnd","keyHandler","event","indexOf","which","clickHandler","addEventListener","window","removeEventListener","setTimeout","activeElement","blur","id","clearTimeout","ref","classnames","useForm","formData","onSubmit","formValidation","formState","setFormState","formErrors","setErrors","preventDefault","validationErrors","isValid","Object","keys","length","name","validation","errors","password","confirm_pass","test","entries","forEach","key","username","login","email","first_name","city","Auth","view","inModal","user","afterConfirm","showModal","e","setFormData","handleSubmit","handleInputChange","refresh_token","JSON","stringify","saveJSON","placeholder","onChange","statesList","map","elem","abbreviation","disabled","to","AuthModal","setView","switchComponents","SwitchTransition","CSSTransition","addEndListener","node","done","classNames","MainNavbar","logoutUser","val","removeItem","confirmLogout","parse","Product","product","onDelete","handleClick","style","border","margin","description","price","product_id","SearchMain","register","setValue","products","setProducts","searchTerm","Footer","Home","ProfileFild","editState","setEditState","modalLogin","showModalLogin","onClose","api","sendMsg","update","title","EmailConfirmIcon","verified","size","color","Profile","profileData","setProfileData","updateProfile","dataEmailReq","errorEmailReq","errorNumEmailReq","sendEmailRequest","updateProfileData","sendMessage","src","image_url","ProfileField","profile_addr","email_verified","last_name","address","zip_code","Products","NotFoundPage","PublicProfile","match","params","addr","find","joined","ResetPassword","reset","token","ModalMsg","setActive","UserChatsPage","setModalMsgState","chats","chat","i","recipientId","recipient_id","recipientName","recipient_name","recipientImg","recipient_img","pathname","DropDownMenu","button","classContainer","classMenu","classActive","clContainer","clMenu","clActive","refer","clickEvent","contains","Message","msgId","onDeleteMsg","createdAt","sender","image","splitMsg","split","openMenu","setOpenMenu","memo","Chat","dataMsg","errorMsg","errorNumMsg","processMsg","chatMsgs","setChatMsgs","bottom","location","useLocation","setNotifState","msg_id","chat_id","msgs","scrollIntoView","parseInt","sender_id","created_at_str","sender_img","rows","AddProduct","product_type","image_urls","UserProducts","userProducts","setUserProducts","getProducts","user_products","handleDelete","ProductDetails","locationInfo","setLocationInfo","product_user_id","user_id","lat","lgt","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f35ea56f.chunk.js","sourcesContent":["export const loadJSON = (key) => key && JSON.parse(localStorage.getItem(key));\n\nexport const saveJSON = (key, data) =>\n  localStorage.setItem(key, JSON.stringify(data));\n\nexport const logout = () => {\n  localStorage.removeItem(\"access_token\");\n  localStorage.removeItem(\"refresh_token\");\n  localStorage.removeItem(\"app_data\");\n};\n\nexport const checkAuth = () =>\n  localStorage.getItem(\"access_token\") && localStorage.getItem(\"refresh_token\");\n","import axios from \"axios\";\nimport { useReducer, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { checkAuth } from \"../utils/localStorage\";\n\nconst fetchReducer = (currState, action) => {\n  switch (action.type) {\n    case \"SEND\":\n      return {\n        ...currState,\n        isLoading: true,\n        errorNum: null,\n        error: null,\n        data: null,\n      };\n    case \"RESPONSE\":\n      return {\n        ...currState,\n        isLoading: false,\n        data: action.responseData,\n      };\n    case \"ERROR\":\n      return {\n        ...currState,\n        isLoading: false,\n        error: action.errorMessage,\n        errorNum: action.errorNum,\n      };\n    default:\n      return;\n  }\n};\n\n/**\n *  useRequest\n * @see https://github.com/Arol15/instaHarvest/blob/master/API.md#useRequest\n */\n\nconst useRequest = () => {\n  const [fetchState, dispatchFetch] = useReducer(fetchReducer, {\n    isLoading: false,\n    error: null,\n    errorNum: null,\n    data: null,\n  });\n\n  const history = useHistory();\n\n  const sendRequest = useCallback(async (url, method, body, isJwt = false) => {\n    if (isJwt) {\n      if (!checkAuth()) {\n        history.push(\"/login\");\n        return;\n      }\n    }\n\n    let headers = {};\n    if (isJwt) {\n      headers.Authorization = \"Bearer \" + localStorage.getItem(\"access_token\");\n    }\n\n    dispatchFetch({ type: \"SEND\" });\n\n    const config = {\n      method: method,\n      url: url,\n      data: body,\n      headers: headers,\n      timeout: 5000,\n    };\n\n    let resp = await axios(config).then(\n      (res) => res,\n      (err) => err.response\n    );\n\n    if (!resp) {\n      dispatchFetch({\n        type: \"ERROR\",\n        errorMessage: \"Something went wrong\",\n        errorNum: 500,\n      });\n      return;\n    }\n\n    if (isJwt && resp.status === 401) {\n      console.log(\"useRequest: refresh_token\");\n      const refrResp = await axios({\n        method: \"post\",\n        url: \"/api/auth/refresh\",\n        data: {},\n        timeout: 5000,\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"refresh_token\"),\n        },\n      }).then(\n        (res) => res,\n        (err) => err.response\n      );\n\n      if (!refrResp) {\n        dispatchFetch({\n          type: \"ERROR\",\n          errorMessage: \"Something went wrong\",\n          errorNum: 500,\n        });\n        return;\n      }\n\n      if (refrResp.status >= 200 && refrResp.status < 300) {\n        localStorage.setItem(\"access_token\", refrResp.data.access_token);\n\n        const newConfig = {\n          ...config,\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"access_token\"),\n          },\n        };\n        resp = await axios(newConfig).then(\n          (res) => res,\n          (err) => err.response\n        );\n        if (!resp) {\n          dispatchFetch({\n            type: \"ERROR\",\n            errorMessage: \"Something went wrong\",\n            errorNum: 500,\n          });\n          return;\n        }\n      } else {\n        resp = refrResp;\n      }\n    }\n    if (resp.status >= 200 && resp.status < 300) {\n      dispatchFetch({\n        type: \"RESPONSE\",\n        responseData: resp.data,\n      });\n    } else if (resp.data.error) {\n      dispatchFetch({\n        type: \"ERROR\",\n        errorMessage: resp.data.error,\n        errorNum: resp.status,\n      });\n    } else if (resp.status === 401) {\n      dispatchFetch({\n        type: \"ERROR\",\n        errorMessage: \"Authorization denied. Please sign in or sign up\",\n        errorNum: 401,\n      });\n    } else if (resp.status === 403) {\n      dispatchFetch({\n        type: \"ERROR\",\n        errorMessage: \"Not enough privileges\",\n        errorNum: 403,\n      });\n    } else {\n      dispatchFetch({\n        type: \"ERROR\",\n        errorMessage: \"Something went wrong\",\n        errorNum: resp.status,\n      });\n    }\n  }, []);\n\n  return [\n    fetchState.isLoading,\n    fetchState.data,\n    fetchState.error,\n    fetchState.errorNum,\n    sendRequest,\n  ];\n};\n\nexport default useRequest;\n","import useRequest from \"../hooks/useRequest\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ShareProducts = () => {\n    \n    const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n    const history = useHistory();\n\n\n    const handleSellProducts = () => {\n        const accessToken = localStorage.getItem(\"access_token\");\n        if (!accessToken){\n            history.push(\"/login\");\n        }\n        else {\n            history.push('/add-product')\n        }\n    }\n\n    return(\n        <div>\n            <button onClick = {handleSellProducts}>Share</button>\n        </div>\n    )\n}\n\nexport default ShareProducts; ","import \"./Spinner.css\";\n\nconst Spinner = (props) => {\n  const el = (\n    <div className=\"center\">\n      <div className=\"indicator\">\n        <div className=\"ind-chase-dot\"></div>\n        <div className=\"ind-chase-dot\"></div>\n        <div className=\"ind-chase-dot\"></div>\n        <div className=\"ind-chase-dot\"></div>\n        <div className=\"ind-chase-dot\"></div>\n        <div className=\"ind-chase-dot\"></div>\n      </div>\n    </div>\n  );\n\n  return el;\n};\n\nexport default Spinner;\n","import { useMemo, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Portal = ({ children, parent }) => {\n  const el = useMemo(() => document.createElement(\"div\"), []);\n  useEffect(() => {\n    const target = parent && parent.appendChild ? parent : document.body;\n    target.appendChild(el);\n\n    return () => {\n      target.removeChild(el);\n    };\n  }, [el, parent]);\n  return ReactDOM.createPortal(children, el);\n};\nexport default Portal;\n","import React, { useState } from \"react\";\n\nconst ModalMsgContext = React.createContext();\n\nconst ModalMsgContextProvider = (props) => {\n  const [state, setState] = useState({\n    open: false,\n    msg: null,\n    classes: null,\n  });\n\n  return (\n    <ModalMsgContext.Provider value={[state, setState]}>\n      {props.children}\n    </ModalMsgContext.Provider>\n  );\n};\n\nexport { ModalMsgContext, ModalMsgContextProvider };\n","import { useRef, useEffect, useReducer, useContext } from \"react\";\nimport Portal from \"../components/UI/Portal\";\nimport classnames from \"classnames\";\nimport \"./useModal.css\";\nimport { ModalMsgContext } from \"../context/ModalMsgContext\";\n\nconst fetchReducer = (currState, action) => {\n  switch (action.type) {\n    case \"setActive\":\n      return {\n        ...currState,\n        active: action.active,\n      };\n    case \"setChildren\":\n      return {\n        ...currState,\n        children: action.children,\n        classes: action.classes,\n      };\n\n    case \"setOpen\":\n      return {\n        ...currState,\n        isOpen: action.isOpen,\n      };\n    case \"setModal\":\n      return {\n        ...currState,\n        modal: action.modal,\n      };\n    default:\n      break;\n  }\n};\n\n/**\n *  useModal\n * @see https://github.com/Arol15/instaHarvest/blob/master/API.md#useModal\n */\n\nconst useModal = ({ withBackdrop, useTimer, timeOut, inPlace }) => {\n  const [fetchState, dispatchFetch] = useReducer(fetchReducer, {\n    active: false,\n    isOpen: false,\n    children: null,\n    classes: null,\n    modal: null,\n  });\n  const backdrop = useRef(null);\n  const showModal = (children, classes) => {\n    dispatchFetch({ type: \"setOpen\", isOpen: true });\n    dispatchFetch({\n      type: \"setChildren\",\n      children: children,\n      classes: classes,\n    });\n  };\n\n  const closeModal = () => {\n    dispatchFetch({ type: \"setOpen\", isOpen: false });\n  };\n  const [, setMsgState] = useContext(ModalMsgContext);\n\n  useEffect(() => {\n    if (withBackdrop === true) {\n      const { current } = backdrop;\n      const transitionEnd = () =>\n        dispatchFetch({ type: \"setActive\", active: fetchState.isOpen });\n      const keyHandler = (event) =>\n        [27].indexOf(event.which) >= 0 && closeModal();\n      const clickHandler = (event) => event.target === current && closeModal();\n\n      if (current) {\n        current.addEventListener(\"transitionend\", transitionEnd);\n        current.addEventListener(\"click\", clickHandler);\n        window.addEventListener(\"keyup\", keyHandler);\n      }\n\n      return () => {\n        if (current) {\n          current.removeEventListener(\"transitionend\", transitionEnd);\n          current.removeEventListener(\"click\", clickHandler);\n        }\n        window.removeEventListener(\"keyup\", keyHandler);\n      };\n    }\n  }, [fetchState.isOpen, fetchState.modal]);\n\n  useEffect(() => {\n    if (fetchState.isOpen && !withBackdrop && !inPlace) {\n      setMsgState({\n        open: true,\n        msg: fetchState.children,\n        classes: fetchState.classes,\n      });\n    } else if (fetchState.isOpen) {\n      window.setTimeout(() => {\n        document.activeElement.blur();\n        dispatchFetch({ type: \"setActive\", active: fetchState.isOpen });\n      }, 10);\n    }\n  }, [fetchState.isOpen]);\n\n  useEffect(() => {\n    let id;\n    if (fetchState.isOpen && useTimer) {\n      id = setTimeout(\n        () => {\n          closeModal();\n        },\n        timeOut ? timeOut : 5000\n      );\n    }\n    return () => {\n      if (useTimer) {\n        clearTimeout(id);\n      }\n    };\n  }, [fetchState.isOpen]);\n\n  useEffect(() => {\n    if (withBackdrop) {\n      dispatchFetch({\n        type: \"setModal\",\n        modal: (\n          <div>\n            {(fetchState.isOpen || fetchState.active) && (\n              <Portal>\n                <div\n                  ref={backdrop}\n                  className={classnames(\"backdrop\", {\n                    \"bd-active\": fetchState.active && fetchState.isOpen,\n                  })}\n                >\n                  <div\n                    className={classnames(\"modal\", {\n                      \"mdl-active\": fetchState.active && fetchState.isOpen,\n                    })}\n                  >\n                    {fetchState.children}\n                  </div>\n                </div>\n              </Portal>\n            )}\n          </div>\n        ),\n      });\n    } else if (inPlace) {\n      dispatchFetch({\n        type: \"setModal\",\n        modal: (\n          <div\n            className={classnames(\"mdl-inpl\", fetchState.classes, {\n              \"mdl-inpl-active\": fetchState.active && fetchState.isOpen,\n            })}\n          >\n            {fetchState.children}\n          </div>\n        ),\n      });\n    } else {\n      <></>;\n    }\n  }, [fetchState.active, fetchState.isOpen, fetchState.children]);\n\n  return [fetchState.modal, showModal, closeModal, fetchState.isOpen];\n};\n\nexport default useModal;\n","import { useState } from \"react\";\n\n/**\n *  useForm\n * @see https://github.com/Arol15/instaHarvest/blob/master/API.md#useForm\n */\n\nconst useForm = (formData, onSubmit, formValidation) => {\n  const [formState, setFormState] = useState({ ...formData });\n  const [formErrors, setErrors] = useState({});\n\n  const handleSubmit = (event) => {\n    event && event.preventDefault();\n    const validationErrors = formValidation(formState);\n    const isValid = Object.keys(validationErrors).length === 0;\n    setErrors(validationErrors);\n\n    if (isValid) {\n      onSubmit();\n    }\n  };\n\n  const handleInputChange = (event) => {\n    // event.persist();\n\n    setFormState({ ...formState, [event.target.name]: event.target.value });\n  };\n\n  return [setFormState, handleSubmit, handleInputChange, formState, formErrors];\n};\n\nexport default useForm;\n","const validation = (data) => {\n  const errors = {};\n  if (data.password && data.confirm_pass) {\n    if (data.password !== data.confirm_pass) {\n      errors.confirm_pass = \"Passwords don't match\";\n    }\n    if (!/^[A-z0-9.!?,+]{6,}$/i.test(data.password)) {\n      errors.confirm_pass =\n        \"Password should be at least 6 characters. Allowed characters: A-z 0-9 . , ! ? +\";\n    }\n  }\n  Object.entries(data).forEach(([key, value]) => {\n    if (key === \"username\") {\n      if (!/^[a-z0-9._]{0,}$/.test(value)) {\n        errors.username = \"Allowed characters: a-z 0-9 . _\";\n      }\n    }\n\n    if (key === \"password\") {\n      if (!value) {\n        errors.password = \"Please enter your password\";\n      }\n    }\n    if (key === \"confirm_pass\") {\n      if (!value) {\n        errors.confirm_pass = \"Passwords don't match\";\n      }\n    }\n    if (key === \"login\") {\n      if (!value) {\n        errors.login = \"Please enter your username or email\";\n      }\n    }\n    if (key === \"email\") {\n      if (!value) {\n        errors.email = \"Enter your email\";\n      } else if (!/^[A-Z0-9.,_%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n        errors.email = \"Invalid email address\";\n      }\n    }\n    if (key === \"first_name\") {\n      if (!value) {\n        errors.first_name = \"Please enter you name\";\n      }\n    }\n    if (key === \"state\") {\n      if (!value) {\n        errors.state = \"Please select state\";\n      }\n    }\n    if (key === \"city\") {\n      if (!value) {\n        errors.city = \"Please enter city\";\n      }\n    }\n    if (key === \"body\") {\n      if (!value) {\n        errors.body = \"Please enter something\";\n      }\n    }\n  });\n\n  return errors;\n};\n\nexport default validation;\n","import { useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport useRequest from \"../../hooks/useRequest\";\nimport Spinner from \"../UI/Spinner\";\nimport useModal from \"../../hooks/useModal\";\nimport useForm from \"../../hooks/useForm\";\nimport statesList from \"../../data/states.json\";\nimport validation from \"../../form_validation/validation\";\nimport { checkAuth } from \"../../utils/localStorage\";\nimport { saveJSON } from \"../../utils/localStorage\";\n\nconst Auth = ({ view, inModal, closeModal, user, afterConfirm }) => {\n  const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n  const history = useHistory();\n  const [modal, showModal] = useModal({\n    withBackdrop: false,\n    useTimer: true,\n    inPlace: inModal ? true : false,\n  });\n\n  checkAuth() && !inModal && history.push(\"/profile\");\n\n  const onSubmit = (e) => {\n    sendRequest(\n      view === \"login\" || view === \"confirm\"\n        ? \"/api/auth/login\"\n        : \"/api/auth/signup\",\n      \"post\",\n      formData\n    );\n  };\n\n  const [\n    setFormData,\n    handleSubmit,\n    handleInputChange,\n    formData,\n    formErrors,\n  ] = useForm({}, onSubmit, validation);\n\n  useEffect(() => {\n    if (view === \"login\") {\n      setFormData({ login: \"\", password: \"\" });\n    } else if (view === \"signup\") {\n      setFormData({\n        email: \"\",\n        password: \"\",\n        confirm_pass: \"\",\n        username: \"\",\n        first_name: \"\",\n        state: \"\",\n        city: \"\",\n      });\n    } else if (view === \"confirm\") {\n      setFormData({ login: user, password: \"\" });\n    }\n  }, [view]);\n\n  // useEffect(() => {\n  //   const access_token = localStorage.getItem(\"access_token\");\n  //   if (access_token && !inModal) {\n  //     history.push(\"/profile\");\n  //   }\n  // }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (data) {\n      localStorage.setItem(\"access_token\", data.access_token);\n      localStorage.setItem(\"refresh_token\", data.refresh_token);\n      saveJSON(\"app_data\", { first_name: data.first_name });\n      if (afterConfirm) {\n        afterConfirm();\n      }\n      if (closeModal) {\n        closeModal();\n      } else {\n        history.push(\"/profile\");\n      }\n    }\n  }, [data]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (error) {\n      showModal(error, \"mdl-error\");\n    } else if (data && data.msg) {\n      showModal(data.msg, \"mdl-ok\");\n    }\n  }, [error, errorNum, data]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      {modal}\n      {isLoading && <Spinner />}\n      {view === \"login\" && <h1>Log In</h1>}\n      {view === \"signup\" && <h1>Sign Up</h1>}\n      {view === \"confirm\" && <h1>Confirm identity</h1>}\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"auth-inputs\">\n          {view === \"login\" && (\n            <>\n              <input\n                key=\"1\"\n                type=\"text\"\n                placeholder=\"Email/Username\"\n                name=\"login\"\n                onChange={handleInputChange}\n                value={formData.login || \"\"}\n              />\n              <div className=\"form-danger\">\n                {formErrors.login && formErrors.login}\n              </div>\n            </>\n          )}\n\n          {view === \"signup\" && (\n            <>\n              <input\n                type=\"text\"\n                placeholder=\"Username\"\n                name=\"username\"\n                onChange={handleInputChange}\n                value={formData.username || \"\"}\n              />\n              <div className=\"form-danger\">\n                {formErrors.username && formErrors.username}\n              </div>\n            </>\n          )}\n\n          {view === \"signup\" && (\n            <>\n              <input\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                onChange={handleInputChange}\n                value={formData.email || \"\"}\n              />\n              <div className=\"form-danger\">\n                {formErrors.email && formErrors.email}\n              </div>\n            </>\n          )}\n\n          {view === \"confirm\" && <p>{formData.login}</p>}\n          <>\n            <input\n              key=\"4\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              onChange={handleInputChange}\n              value={formData.password || \"\"}\n            />\n            <div className=\"form-danger\">\n              {formErrors.password && formErrors.password}\n            </div>\n          </>\n          {view === \"signup\" && (\n            <>\n              <input\n                key=\"15\"\n                type=\"password\"\n                placeholder=\"Confirm password\"\n                name=\"confirm_pass\"\n                onChange={handleInputChange}\n                value={formData.confirm_pass || \"\"}\n              />\n              <div className=\"form-danger\">\n                {formErrors.confirm_pass && formErrors.confirm_pass}\n              </div>\n              <input\n                key=\"5\"\n                type=\"text\"\n                placeholder=\"First Name\"\n                name=\"first_name\"\n                onChange={handleInputChange}\n                value={formData.first_name || \"\"}\n              />\n              <div className=\"form-danger\">\n                {formErrors.first_name && formErrors.first_name}\n              </div>\n              <select\n                key=\"6\"\n                placeholder=\"State\"\n                name=\"state\"\n                onChange={handleInputChange}\n                value={formData.state || \"\"}\n              >\n                <option key=\"-\" value=\"\">\n                  Select state\n                </option>\n                {statesList.map((elem) => {\n                  return (\n                    <option key={elem.abbreviation} value={statesList.name}>\n                      {elem.name}\n                    </option>\n                  );\n                })}\n              </select>\n              <div className=\"form-danger\">\n                {formErrors.state && formErrors.state}\n              </div>\n              <input\n                key=\"7\"\n                type=\"text\"\n                placeholder=\"City\"\n                name=\"city\"\n                onChange={handleInputChange}\n                value={formData.city || \"\"}\n              />\n              <div className=\"form-danger\">\n                {formErrors.city && formErrors.city}\n              </div>\n            </>\n          )}\n        </div>\n        <input key=\"8\" type=\"submit\" disabled={isLoading} />\n      </form>\n\n      {inModal ? null : view === \"login\" ? (\n        <Link to=\"/signup\">Sign Up</Link>\n      ) : (\n        <Link to=\"/login\">Login</Link>\n      )}\n      <p></p>\n      {view === \"login\" && (\n        <a\n          onClick={() => {\n            history.push(\"/reset_password\");\n          }}\n        >\n          Forgot your password?\n        </a>\n      )}\n    </div>\n  );\n};\n\nexport default Auth;\n","import { useState } from \"react\";\nimport Auth from \"../../components/auth/Auth\";\nimport \"./auth.css\";\nimport classnames from \"classnames\";\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\";\n\nconst AuthModal = () => {\n  const [view, setView] = useState(\"login\");\n\n  const switchComponents = () => {\n    if (view === \"login\") {\n      setView(\"signup\");\n    } else {\n      setView(\"login\");\n    }\n  };\n  return (\n    <div>\n      <button\n        disabled={view === \"login\"}\n        className={classnames(\"authButton\", { active: view === \"login\" })}\n        onClick={switchComponents}\n      >\n        Log In\n      </button>\n      <button\n        disabled={view === \"signup\"}\n        className={classnames(\"authButton\", { active: view === \"signup\" })}\n        onClick={switchComponents}\n      >\n        Sign Up\n      </button>\n\n      <SwitchTransition>\n        <CSSTransition\n          key={view}\n          addEndListener={(node, done) =>\n            node.addEventListener(\"transitionend\", done, false)\n          }\n          classNames=\"fade\"\n        >\n          {view === \"signup\" ? (\n            <Auth view={view} inModal={true} />\n          ) : (\n            <Auth view={view} inModal={true} />\n          )}\n        </CSSTransition>\n      </SwitchTransition>\n    </div>\n  );\n};\n\nexport default AuthModal;\n","import { useHistory, Link } from \"react-router-dom\";\nimport \"./MainNavbar.css\";\nimport { checkAuth, loadJSON, logout } from \"../utils/localStorage\";\nimport { useModal } from \"../hooks/hooks\";\nimport AuthModal from \"../components/auth/AuthModal\";\n\nconst MainNavbar = () => {\n  const history = useHistory();\n\n  const [modal, showModal, closeModal] = useModal({\n    withBackdrop: true,\n    useTimer: false,\n    inPlace: false,\n  });\n\n  const logoutUser = (val) => {\n    if (val) {\n      logout();\n      history.push(\"/\");\n    }\n    closeModal();\n  };\n\n  const confirmLogout = (\n    <>\n      <p>Are you sure to logout?</p>\n      <button onClick={() => logoutUser(true)}>Yes</button>\n      <button onClick={() => logoutUser(false)}>No</button>\n    </>\n  );\n\n  return (\n    <>\n      <nav className=\"main-navbar\">\n        <div>\n          <Link to=\"/\">instaHarvest</Link>\n        </div>\n        <div>\n          <Link to=\"/add-product\">Share your Product</Link>\n        </div>\n        {checkAuth() ? (\n          <div className=\"main-navbar-links\">\n            <div>{loadJSON(\"app_data\").first_name}</div>\n            <a onClick={() => showModal(confirmLogout)}>Logout</a>\n          </div>\n        ) : (\n          <div className=\"main-navbar-links\">\n            <a onClick={() => showModal(<AuthModal />)}>Sign In</a>\n          </div>\n        )}\n      </nav>\n      {modal}\n    </>\n  );\n};\n\nexport default MainNavbar;\n","import { useHistory } from \"react-router-dom\"; \n// import {useRequest} from \"../hooks/hooks\"; \n// import { useEffect } from \"react\"; \n\nconst Product = ({product, onDelete}, ) => {\n\n    // const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n\n    const history = useHistory(); \n    // console.log(product)\n    const divStyle = {\n        border: \"1px solid black\", \n        margin: \"5px\"\n    }\n\n    const handleClick = (product) => {\n        history.push(\"/product-info\", [product])\n    }\n\n//    const deleteProduct = () => {\n//        onDelete(product.product_id)\n//    }\n\n    return (\n        <>\n            <div onClick={() => handleClick(product)} style={divStyle} className=\"product\">\n            <p>{product.name}</p>\n            <p>{product.description}</p>\n            <p>{product.price}</p>\n            </div>\n            <button onClick={() => onDelete(product.product_id)}>Delete Product</button>\n        </>\n    )\n}\n\nexport default Product; ","import { useState, useEffect } from 'react'; \nimport { useForm } from \"react-hook-form\";\nimport useRequest from \"../hooks/useRequest\"; \nimport Product from './Product'\n\nconst SearchMain = () => {\n\n    const { register, handleSubmit, setValue } = useForm();\n    const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n    const [products, setProducts] = useState([]); \n\n    const onSubmit = (searchTerm) => {\n        sendRequest(\"/api/products/get-all\", \"post\", searchTerm); \n    }; \n\n    useEffect(() => {\n       if (data) {\n           setProducts(data)\n       } \n    }, [data])\n\n    return(\n        <>\n        {error && <h1>Error: {error}</h1>}\n        {isLoading && <h1>Is Loading</h1>}\n        { products.length === 0 ? \n        (<form onSubmit={handleSubmit(onSubmit)}>\n            <input type=\"text\" placeholder=\"Enter your location\" name=\"search_term\" ref={register}/>\n            <button type=\"submit\">Find</button>\n        </form>) : (\n            <Product products={products.products}/>)\n        }   \n        </>\n    )\n}\n\nexport default SearchMain; ","const Footer = () => {\n    return (\n        <footer>\n            All Icons and copyrights\n        </footer>\n    )\n}\n\nexport default Footer; ","import ShareProducts from \"./ShareProducts\";\nimport Spinner from \"./UI/Spinner\";\nimport MainNavbar from './MainNavbar'\nimport SearchMain from '../components/SearchMain'\nimport Footer from \"../components/Footer\"; \n\nconst Home = () => {\n  \n    return(\n    <div>\n      <MainNavbar />\n      <h1>Welcome to instaHarvest</h1>\n      <SearchMain />\n      <ShareProducts />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from \"react\";\n// import { useForm } from \"react-hook-form\";\nimport { useRequest, useModal, useForm } from \"../../hooks/hooks\";\nimport Spinner from \"../UI/Spinner\";\nimport Auth from \"../auth/Auth\";\nimport statesList from \"../../data/states.json\";\nimport validation from \"../../form_validation/validation\";\nimport \"./profile.css\";\n\nconst ProfileFild = (props) => {\n  const [editState, setEditState] = useState(false);\n  const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n  const [modalLogin, showModalLogin, onClose] = useModal({\n    withBackdrop: true,\n    useTimer: false,\n    inPlace: false,\n  });\n\n  const onSubmit = () => {\n    sendRequest(`/api/account${props.api}`, props.method, formData, true);\n  };\n\n  const [\n    setFormData,\n    handleSubmit,\n    handleInputChange,\n    formData,\n    formErrors,\n  ] = useForm({ [props.name]: props.value }, onSubmit, validation);\n\n  useEffect(() => {\n    if (error && errorNum !== 401) {\n      props.sendMsg(error, \"mdl-error\");\n    } else if (data && data.msg) {\n      props.sendMsg(data.msg, \"mdl-ok\");\n      props.update();\n      setEditState(false);\n    }\n  }, [data, error]);\n\n  useEffect(() => {\n    if (errorNum === 401) {\n      showModalLogin(\n        <Auth\n          view={\"confirm\"}\n          inModal={true}\n          closeModal={onClose}\n          afterConfirm={handleSubmit}\n          user={props.user}\n        />\n      );\n    }\n  }, [errorNum]);\n\n  return (\n    <>\n      {modalLogin}\n      {isLoading && <Spinner />}\n      <b>{props.title}:</b>\n      {editState ? (\n        <div>\n          <form onSubmit={handleSubmit}>\n            {props.type === \"state\" ? (\n              <select\n                key=\"6\"\n                placeholder=\"State\"\n                name=\"state\"\n                onChange={handleInputChange}\n                value={formData.state || \"\"}\n              >\n                <option key=\"-\" value=\"\">\n                  Select state\n                </option>\n                {statesList.map((elem) => {\n                  return (\n                    <option key={elem.abbreviation} value={statesList.name}>\n                      {elem.name}\n                    </option>\n                  );\n                })}\n              </select>\n            ) : (\n              <>\n                <input\n                  placeholder={\"\"}\n                  type=\"text\"\n                  name={props.name}\n                  onChange={handleInputChange}\n                  value={formData[props.name] || \"\"}\n                ></input>\n                <div className=\"form-danger\">\n                  {formErrors[props.name] && formErrors[props.name]}\n                </div>\n              </>\n            )}\n\n            <div>\n              <input type=\"submit\" disabled={isLoading}></input>\n              <button\n                onClick={() => {\n                  setEditState(false);\n                }}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      ) : (\n        <>\n          {props.value ? props.children : <p>Empty</p>}\n          <a\n            onClick={() => {\n              setEditState(true);\n            }}\n          >\n            Edit\n          </a>\n          {/* <button\n            onClick={() => {\n              setEditState(true);\n            }}\n          >\n            Edit\n          </button> */}\n        </>\n      )}\n\n      <br />\n    </>\n  );\n};\n\nexport default ProfileFild;\n","import { VscUnverified } from \"react-icons/vsc\";\nimport { GoVerified } from \"react-icons/go\";\n\nconst EmailConfirmIcon = ({ verified, children }) => {\n  return (\n    <div>\n      {children}\n      <span className=\"tooltip\">\n        {verified ? (\n          <GoVerified size={\"24px\"} color={\"#4e9340\"} />\n        ) : (\n          <VscUnverified size={\"24px\"} />\n        )}\n\n        <span className=\"tooltiptext\">\n          {verified ? \"Email verified\" : \"Email not verified\"}\n        </span>\n      </span>\n    </div>\n  );\n};\n\nexport default EmailConfirmIcon;\n","import { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useRequest from \"../../hooks/useRequest\";\nimport Spinner from \"../UI/Spinner\";\nimport ProfileField from \"./ProfileField\";\nimport EmailConfirmIcon from \"../UI/EmailConfirmIcon\";\nimport { ModalMsgContext } from \"../../context/ModalMsgContext\";\nimport MainNavbar from \"../MainNavbar\";\nimport \"./profile.css\";\n\nconst Profile = (props) => {\n  const [profileData, setProfileData] = useState(null);\n  const [updateProfile, setUpdateProfile] = useState(false);\n  const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n  const [\n    ,\n    dataEmailReq,\n    errorEmailReq,\n    errorNumEmailReq,\n    sendEmailRequest,\n  ] = useRequest();\n\n  const [, setMsgState] = useContext(ModalMsgContext);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    sendRequest(\"/api/account/get_profile_private\", \"POST\", {}, true);\n  }, [updateProfile]);\n\n  useEffect(() => {\n    if (data) {\n      setProfileData({ ...data });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (error) {\n      setMsgState({\n        open: true,\n        msg: error,\n        classes: \"mdl-error\",\n      });\n    } else if (data && data.msg) {\n      setMsgState({\n        open: true,\n        msg: data.msg,\n        classes: \"mdl-ok\",\n      });\n    }\n  }, [error, errorNum, data]);\n\n  useEffect(() => {\n    if (errorEmailReq) {\n      setMsgState({\n        open: true,\n        msg: errorEmailReq,\n        classes: \"mdl-error\",\n      });\n    } else if (dataEmailReq && dataEmailReq.msg) {\n      setMsgState({\n        open: true,\n        msg: dataEmailReq.msg,\n        classes: \"mdl-error\",\n      });\n    }\n  }, [dataEmailReq, errorEmailReq, errorNumEmailReq]);\n\n  const updateProfileData = () => {\n    sendRequest(\"/api/account/get_profile_private\", \"POST\", {}, true);\n  };\n\n  const sendMessage = (msg, classes) => {\n    setMsgState({\n      open: true,\n      msg: msg,\n      classes: classes,\n    });\n  };\n\n  const resendConfirmEmail = () => {\n    sendEmailRequest(\"/api/auth/resend_email\", \"POST\", {}, true);\n  };\n\n  return (\n    <>\n      <MainNavbar />\n      {isLoading && <Spinner />}\n\n      {profileData && (\n        <div>\n          <h1>Profile</h1>\n\n          <div className=\"prf-block\">\n            <h2>Public Information</h2>\n            <p></p>\n            <img className=\"prf-img\" src={profileData.image_url} />\n            <button>Edit</button>\n\n            <div className=\"prf-field\">\n              <ProfileField\n                name=\"first_name\"\n                title=\"First name\"\n                api=\"/edit_profile\"\n                method=\"PATCH\"\n                update={updateProfileData}\n                sendMsg={sendMessage}\n                value={profileData.first_name}\n              >\n                <p>{profileData.first_name}</p>\n              </ProfileField>\n            </div>\n\n            <div className=\"prf-field\">\n              <ProfileField\n                name=\"profile_addr\"\n                title=\"Profile address\"\n                api=\"/edit_profile_address\"\n                method=\"PATCH\"\n                update={updateProfileData}\n                sendMsg={sendMessage}\n                value={profileData.profile_addr}\n              >\n                <p>\n                  <a\n                    onClick={() => {\n                      history.push(`/profile/${profileData.profile_addr}`);\n                    }}\n                  >\n                    https://instaharvest.com/{profileData.profile_addr}\n                  </a>\n                </p>\n              </ProfileField>\n            </div>\n          </div>\n\n          <div className=\"prf-block\">\n            <h2>Private information</h2>\n            <div className=\"prf-field\">\n              <ProfileField\n                name=\"new_email\"\n                title=\"Email\"\n                api=\"/request_change_email\"\n                method=\"POST\"\n                update={updateProfileData}\n                sendMsg={sendMessage}\n                user={profileData.email}\n                value={profileData.email}\n              >\n                <div>\n                  <EmailConfirmIcon verified={profileData.email_verified}>\n                    <p className=\"inline-block\">{profileData.email}</p>\n                  </EmailConfirmIcon>\n                </div>\n                <p></p>\n              </ProfileField>\n              {!profileData.email_verified && (\n                <div>\n                  <a onClick={resendConfirmEmail}>Resend confirmation email</a>\n                </div>\n              )}\n            </div>\n\n            <div className=\"prf-field\">\n              <ProfileField\n                name=\"username\"\n                title=\"Username\"\n                api=\"/edit_username\"\n                method=\"PATCH\"\n                update={updateProfileData}\n                sendMsg={sendMessage}\n                user={profileData.email}\n                value={profileData.username}\n              >\n                <p>{profileData.username}</p>\n              </ProfileField>\n            </div>\n\n            <div className=\"prf-field\">\n              <ProfileField\n                name=\"last_name\"\n                title=\"Last name\"\n                api=\"/edit_profile\"\n                method=\"PATCH\"\n                update={updateProfileData}\n                sendMsg={sendMessage}\n                value={profileData.last_name}\n              >\n                <p>{profileData.last_name}</p>\n              </ProfileField>\n            </div>\n          </div>\n\n          <div className=\"prf-block\">\n            <div className=\"prf-field\">\n              <ProfileField\n                name=\"address\"\n                title=\"Address\"\n                api=\"/edit_profile\"\n                method=\"PATCH\"\n                update={updateProfileData}\n                sendMsg={sendMessage}\n                value={profileData.address}\n              >\n                <p>{profileData.address}</p>\n              </ProfileField>\n            </div>\n            <div className=\"prf-field\">\n              <ProfileField\n                name=\"city\"\n                title=\"City\"\n                api=\"/edit_profile\"\n                method=\"PATCH\"\n                update={updateProfileData}\n                sendMsg={sendMessage}\n                value={profileData.city}\n              >\n                <p>{profileData.city}</p>\n              </ProfileField>\n            </div>\n            <div className=\"prf-field\">\n              <ProfileField\n                name=\"state\"\n                title=\"State\"\n                api=\"/edit_profile\"\n                method=\"PATCH\"\n                type=\"state\"\n                update={updateProfileData}\n                sendMsg={sendMessage}\n                value={profileData.state}\n              >\n                <p>{profileData.state}</p>\n              </ProfileField>\n            </div>\n            <div className=\"prf-field\">\n              <ProfileField\n                name=\"zip_code\"\n                title=\"Zip code\"\n                api=\"/edit_profile\"\n                method=\"PATCH\"\n                update={updateProfileData}\n                sendMsg={sendMessage}\n                value={profileData.zip_code}\n              >\n                <p>{profileData.zip_code}</p>\n              </ProfileField>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useEffect, useState } from 'react'; \nimport { useRequest } from '../hooks/hooks'; \nimport Product from './Product'; \n\nconst Products = () => {\n\n    const [products, setProducts] = useState([]);\n    const [isLoading, data, error, errorNum, sendRequest] = useRequest(); \n\n    useEffect(() => {\n        sendRequest(\"/api/products/get-all\", 'post', null); \n    }, []); \n\n    useEffect(() => {\n        if(data) {\n            setProducts(data.products)\n        }\n    }, [data])\n\n    return (\n        <>\n        {products.map((product) => {\n            return (\n                <div key={product.product_id}>\n                    <Product product = {product}/>\n                </div>\n            )\n        })}\n       </>\n    )\n}\n\nexport default Products; \n\n","const NotFoundPage = () => {\n  return <h1>Page Not Found</h1>;\n};\n\nexport default NotFoundPage;\n","import { useEffect, useContext } from \"react\";\nimport { useRequest, useModal } from \"../../hooks/hooks\";\nimport Spinner from \"../UI/Spinner\";\nimport statesList from \"../../data/states.json\";\nimport EmailConfirmIcon from \"../UI/EmailConfirmIcon\";\nimport \"./profile.css\";\n\nconst PublicProfile = (props) => {\n  const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n\n  useEffect(() => {\n    sendRequest(`/api/account/${props.match.params.addr}`, \"GET\", {});\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      <h1></h1>\n      {error && <h1>Profile Not Found</h1>}\n      {data && (\n        <div className=\"\">\n          <img className=\"prf-img\" src={data.image_url} />\n          <EmailConfirmIcon verified={data.email_verified}>\n            <h2 className=\"inline-block\">{data.first_name}</h2>\n          </EmailConfirmIcon>\n          <p>\n            {data.city},{\" \"}\n            {statesList.find((elem) => elem.name === data.state).abbreviation}\n          </p>\n          <p>Joined: {data.joined}</p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default PublicProfile;\n","import { useEffect, useContext } from \"react\";\nimport { useRequest, useForm } from \"../../hooks/hooks\";\nimport validation from \"../../form_validation/validation\";\nimport { useHistory } from \"react-router-dom\";\nimport Spinner from \"../UI/Spinner\";\nimport { ModalMsgContext } from \"../../context/ModalMsgContext\";\n\nconst ResetPassword = (props) => {\n  const history = useHistory();\n  const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n\n  const [, setMsgState] = useContext(ModalMsgContext);\n\n  const onSubmit = () => {\n    if (props.reset) {\n      sendRequest(\"/api/auth/reset_password\", \"POST\", {\n        email: formData.email,\n      });\n    } else {\n      sendRequest(\"/api/auth/reset_password_confirm\", \"POST\", {\n        password: formData.password,\n        token: props.match.params.token,\n      });\n    }\n  };\n\n  const [, handleSubmit, handleInputChange, formData, formErrors] = useForm(\n    props.reset ? { email: \"\" } : { password: \"\", confirm_pass: \"\" },\n    onSubmit,\n    validation\n  );\n\n  useEffect(() => {\n    if (error) {\n      setMsgState({\n        open: true,\n        msg: error,\n        classes: \"mdl-error\",\n      });\n    } else if (data && data.msg) {\n      setMsgState({\n        open: true,\n        msg: data.msg,\n        classes: \"mdl-ok\",\n      });\n      if (props.reset) {\n        history.push(\"/login\");\n      } else {\n        history.push(\"/login\");\n      }\n    }\n  }, [error, errorNum, data]);\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      <h1>Reset Password</h1>\n      {props.reset ? (\n        <>\n          <p>Enter your email address below</p>\n          <form onSubmit={handleSubmit}>\n            <label>Email: </label>\n            <input\n              key=\"9\"\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              onChange={handleInputChange}\n              value={formData.email || \"\"}\n            />\n            <div className=\"form-danger\">\n              {formErrors.email && formErrors.email}\n            </div>\n            <input key=\"8\" type=\"submit\" disabled={isLoading} />\n          </form>\n        </>\n      ) : (\n        <>\n          <form onSubmit={handleSubmit}>\n            <label>New password: </label>\n            <input\n              key=\"4\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              onChange={handleInputChange}\n              value={formData.password || \"\"}\n            />\n            <div className=\"form-danger\">\n              {formErrors.password && formErrors.password}\n            </div>\n\n            <label>Confirm password: </label>\n            <input\n              key=\"15\"\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              name=\"confirm_pass\"\n              onChange={handleInputChange}\n              value={formData.confirm_pass || \"\"}\n            />\n            <div className=\"form-danger\">\n              {formErrors.confirm_pass && formErrors.confirm_pass}\n            </div>\n            <input key=\"87\" type=\"submit\" disabled={isLoading} />\n          </form>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ResetPassword;\n","import { useContext, useState, useEffect } from \"react\";\nimport { ModalMsgContext } from \"../../context/ModalMsgContext\";\nimport Portal from \"./Portal\";\nimport classnames from \"classnames\";\n\nconst ModalMsg = (props) => {\n  const [state, setState] = useContext(ModalMsgContext);\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    if (state.open) {\n      window.setTimeout(() => {\n        document.activeElement.blur();\n        setActive(state.open);\n      }, 10);\n    }\n  }, [state]);\n\n  useEffect(() => {\n    let id;\n    if (state.open) {\n      id = setTimeout(\n        () => {\n          setState({\n            open: false,\n            msg: null,\n            classes: null,\n          });\n        },\n        state.timeOut ? state.timeOut : 7000\n      );\n    }\n    return () => {\n      clearTimeout(id);\n    };\n  }, [state]);\n\n  useEffect(() => {\n    let id;\n    if (state.open) {\n      id = setTimeout(\n        () => {\n          setActive(false);\n        },\n        state.timeOut ? state.timeOut - 1000 : 6000\n      );\n    }\n    return () => {\n      clearTimeout(id);\n    };\n  }, [active]);\n\n  return (\n    <>\n      {(state.open || active) && (\n        <Portal>\n          <div\n            className={classnames(\"mdl-msg\", state.classes, {\n              \"mdl-msg-active\": active,\n            })}\n          >\n            {state.msg}\n          </div>\n        </Portal>\n      )}\n    </>\n  );\n};\n\nexport default ModalMsg;\n","import { useEffect, useContext, useState } from \"react\";\nimport { useRequest } from \"../../hooks/hooks\";\nimport Spinner from \"../UI/Spinner\";\nimport { ModalMsgContext } from \"../../context/ModalMsgContext\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./chat.css\";\n\nconst UserChatsPage = () => {\n  const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n  const [, setModalMsgState] = useContext(ModalMsgContext);\n\n  const history = useHistory();\n  const openChat = (recipientId, recipientName, recipientImg) => {\n    history.push({\n      pathname: `/chats/${recipientName}`,\n      state: {\n        recipientId: recipientId,\n        recipientName: recipientName,\n        recipientImg: recipientImg,\n      },\n    });\n  };\n\n  useEffect(() => {\n    sendRequest(\"/api/chat/get_user_chats\", \"POST\", {}, true);\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      setModalMsgState({\n        open: true,\n        msg: error,\n        classes: \"mdl-error\",\n      });\n    }\n  }, [data, error, errorNum]);\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      {data &&\n        data.chats.map((chat, i) => {\n          return (\n            <div\n              key={i}\n              className=\"prf-user-chats\"\n              onClick={() =>\n                openChat(\n                  chat.recipient_id,\n                  chat.recipient_name,\n                  chat.recipient_img\n                )\n              }\n            >\n              <img className=\"chat-img\" src={chat.recipient_img} />\n              <div>{chat.recipient_name}</div>\n            </div>\n          );\n        })}\n    </>\n  );\n};\n\nexport default UserChatsPage;\n","import { useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport \"./dropDownMenu.css\";\nconst DropDownMenu = ({\n  children,\n  open,\n  button,\n  onClick,\n  classContainer,\n  classMenu,\n  classActive,\n}) => {\n  const [classes] = useState({\n    clContainer: classContainer ? classContainer : \"menu-container\",\n    clMenu: classMenu ? classMenu : \"menu\",\n    clActive: classActive ? classActive : \"menu-active\",\n  });\n\n  const refer = useRef(null);\n  useEffect(() => {\n    const clickEvent = (e) => {\n      if (refer.current !== null && !refer.current.contains(e.target)) {\n        onClick();\n      }\n    };\n    if (open) {\n      window.addEventListener(\"click\", clickEvent);\n\n      return () => {\n        window.removeEventListener(\"click\", clickEvent);\n      };\n    }\n  }, [open]);\n\n  return (\n    <div className={classes.clContainer}>\n      {button}\n      <nav\n        ref={refer}\n        className={classnames(classes.clMenu, { [classes.clActive]: open })}\n      >\n        {children}\n      </nav>\n    </div>\n  );\n};\n\nexport default DropDownMenu;\n","import { memo, useState } from \"react\";\nimport { MdMoreVert } from \"react-icons/md\";\nimport DropDownMenu from \"../UI/DropDownMenu\";\nimport classnames from \"classnames\";\nimport \"./chat.css\";\n\nconst Message = ({ msgId, onDeleteMsg, body, createdAt, sender, image }) => {\n  const splitMsg = body.split(\"\\n\").map((e, i) => {\n    return <p key={i}>{e}</p>;\n  });\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const deleteMsg = () => {\n    onDeleteMsg(msgId);\n    setOpenMenu(!openMenu);\n  };\n\n  const onClick = () => {\n    setOpenMenu(!openMenu);\n  };\n\n  return (\n    <div\n      className={classnames(\n        \"msg-container\",\n        sender === \"Me\" ? \"msg-cnt-self\" : \"msg-cnt-reciv\"\n      )}\n    >\n      {sender !== \"Me\" && <img className=\"chat-img\" src={image} />}\n      <div\n        className={classnames(\n          \"msg-body\",\n          sender === \"Me\" ? \"msg-body-self\" : \"msg-body-reciv\"\n        )}\n      >\n        {splitMsg}\n        <p>{createdAt}</p>\n      </div>\n      {sender === \"Me\" && (\n        <DropDownMenu\n          open={openMenu}\n          button={\n            <button className=\"msg-menu-button\" onClick={onClick}>\n              <MdMoreVert />\n            </button>\n          }\n          onClick={onClick}\n        >\n          <p onClick={deleteMsg}>Delete</p>\n        </DropDownMenu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Message);\n","import { useState, useEffect, useContext, useRef } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { useRequest, useForm } from \"../../hooks/hooks\";\nimport validation from \"../../form_validation/validation\";\nimport Spinner from \"../UI/Spinner\";\nimport { ModalMsgContext } from \"../../context/ModalMsgContext\";\nimport Message from \"./Message\";\n\nconst Chat = () => {\n  const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n  const [\n    isLoadingMsg,\n    dataMsg,\n    errorMsg,\n    errorNumMsg,\n    processMsg,\n  ] = useRequest();\n  const [chatMsgs, setChatMsgs] = useState(null);\n  const bottom = useRef();\n  const location = useLocation();\n  const history = useHistory();\n  if (!location.state) {\n    history.push(\"/profile/chats\");\n  }\n  const { recipientId, recipientName, recipientImg } = location.state;\n  const onSubmit = (e) => {\n    processMsg(\"/api/chat/send_message\", \"POST\", formData, true);\n  };\n  const [\n    setFormData,\n    handleSubmit,\n    handleInputChange,\n    formData,\n    formErrors,\n  ] = useForm({ body: \"\", recipient_id: recipientId }, onSubmit, validation);\n  const [, setNotifState] = useContext(ModalMsgContext);\n\n  const onDeleteMsg = (msgId) => {\n    processMsg(\"/api/chat/delete_message\", \"DELETE\", { msg_id: msgId }, true);\n  };\n\n  useEffect(() => {\n    sendRequest(\n      \"/api/chat/get_chat_between_users\",\n      \"POST\",\n      {\n        recipient_id: recipientId,\n      },\n      true\n    );\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      setNotifState({\n        open: true,\n        msg: error,\n        classes: \"mdl-error\",\n      });\n    } else if (data) {\n      setFormData({ ...formData, chat_id: data.chat_id });\n      setChatMsgs([...data.msgs]);\n    }\n  }, [error, errorNum, data]);\n\n  useEffect(() => {\n    if (errorMsg) {\n      setNotifState({\n        open: true,\n        msg: errorMsg,\n        classes: \"mdl-error\",\n      });\n    } else if (dataMsg) {\n      sendRequest(\n        \"/api/chat/get_chat_messages\",\n        \"POST\",\n        {\n          chat_id: data.chat_id,\n        },\n        true\n      );\n      setFormData({ ...formData, body: \"\" });\n    }\n  }, [dataMsg, errorMsg, errorNumMsg]);\n\n  useEffect(() => {\n    bottom.current && bottom.current.scrollIntoView();\n  }, [chatMsgs]);\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      <h1>Chat with {recipientName}</h1>\n      <div className=\"chat-scroll\">\n        {chatMsgs &&\n          chatMsgs.map((msg, i) => {\n            const sender =\n              parseInt(msg.sender_id) === parseInt(recipientId)\n                ? recipientName\n                : \"Me\";\n            return (\n              <div key={i} ref={i === chatMsgs.length - 1 ? bottom : null}>\n                <Message\n                  msgId={msg.msg_id}\n                  onDeleteMsg={onDeleteMsg}\n                  createdAt={msg.created_at_str}\n                  sender={sender}\n                  body={msg.body}\n                  image={msg.sender_img}\n                />\n              </div>\n            );\n          })}\n      </div>\n      {\n        <form>\n          <textarea\n            rows={3}\n            type=\"text\"\n            name=\"body\"\n            onChange={handleInputChange}\n            value={formData.body || \"\"}\n          ></textarea>\n          <div className=\"form-danger\">\n            {formErrors.body && formErrors.body}\n          </div>\n          <button onClick={handleSubmit}>Send</button>\n        </form>\n      }\n    </>\n  );\n};\n\nexport default Chat;\n","import { useContext, useEffect } from \"react\"; \nimport validation from '../form_validation/validation';\nimport { useRequest, useForm } from '../hooks/hooks'; \nimport { useHistory } from \"react-router-dom\"; \nimport { ModalMsgContext } from '../context/ModalMsgContext'; \nimport MainNavbar from './MainNavbar';\nimport Spinner from \"./UI/Spinner\"; \n\nconst AddProduct = () => {\n\n    const history = useHistory(); \n    const [ isLoading, data, error, errorNum, sendRequest ] = useRequest(); \n    const [, setModalMsgState] = useContext(ModalMsgContext); \n\n    const onSubmit = () => {\n        sendRequest('/api/products/add-product', \"post\", formData, true);\n    }; \n\n    const [ setFormData, handleSubmit, handleInputChange, formData, formErrors ] = useForm({\n        name: \"\", \n        product_type: \"\", \n        image_urls: [],\n        price: 0, \n        status: \"\", \n        description: \"\"\n    }, onSubmit, validation);\n\n    useEffect(() => {\n        if (error) {\n          setModalMsgState({\n            open: true,\n            msg: error,\n            classes: \"mdl-error\",\n          });\n        }\n        else if(data) {\n          setModalMsgState({\n            open: true,\n            msg: \"Product has been added!\",\n            classes: \"mdl-ok\",\n          });\n          history.push(\"/user-products\");\n\n        }\n      }, [data, error, errorNum]);\n    \n    return(\n        <div>\n            <MainNavbar />\n            <h2>Add your product</h2>\n            {isLoading && <Spinner />}\n            <form onSubmit={handleSubmit}>\n                <label>Name of your product</label>\n                <input \n                placeholder=\"Name\" \n                type=\"text\" \n                name=\"name\" \n                onChange={handleInputChange}\n                value={formData.name}\n                />\n                <label>Product Type:</label>\n                <select \n                name=\"product_type\" \n                onChange={handleInputChange}\n                value={formData.product_type}\n                >\n                <option>Select Product Type</option>\n                <option>Fruit</option>\n                <option>Vegetable</option>\n                <option>Herb</option>\n                <option>Other</option>\n                </select>\n                <label>Pictures</label>\n                <input \n                type=\"file\" \n                name=\"image_urls\" \n                onChange={handleInputChange}\n                value={formData.image_urls}\n                />\n                <label>Price: </label>\n                <input \n                placeholder=\"$0.00\" \n                type=\"number\" \n                name=\"price\" \n                onChange={handleInputChange}\n                value={formData.price}\n                />\n                <label>Description: </label>\n                <textarea \n                placeholder=\"Describe your product\" \n                type=\"textarea\" \n                name=\"description\" \n                onChange={handleInputChange}\n                value={formData.description}\n                />\n                <button>Add Product</button>\n            </form>\n        </div>\n    )\n}\n\nexport default AddProduct; ","import { useRequest } from \"../hooks/hooks\";\nimport { useEffect, useState } from \"react\"; \nimport Spinner from './UI/Spinner';\nimport MainNavbar from \"./MainNavbar\"; \nimport Product from './Product'; \n\nconst UserProducts = () => {\n\n    const [userProducts, setUserProducts] = useState([]);\n    const [isLoading, data, error, errorNum, sendRequest] = useRequest(); \n\n    const getProducts = () => {\n        sendRequest(\"/api/products/products-per-user\", \"post\", null, true)\n    }\n\n    useEffect(() => {\n        getProducts();\n    }, [])\n\n    useEffect(() => {\n        if (data && data.msg === \"deleted\"){\n            getProducts();\n        }\n        else if(data) {\n            setUserProducts(data.user_products)\n        }\n    }, [data])\n\n    const handleDelete = (product_id) => {\n        sendRequest(\"/api/products/delete_product\", \"delete\", {product_id: product_id}, true)\n    }\n\n    console.log(userProducts)\n    return(\n        <div>\n            <MainNavbar />\n            <h2>All your products are here! </h2>\n            {isLoading && <Spinner />}\n            {userProducts && userProducts.map((product) => {\n                return(\n                    <div key={product.product_id}>\n                        <Product product={product} onDelete={handleDelete}/>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default UserProducts; ","import { useLocation } from \"react-router-dom\"; \nimport { useEffect, useState } from \"react\"; \nimport useRequest from \"../hooks/useRequest\"; \n\nconst ProductDetails = () => {\n    const location = useLocation(); \n    const [isLoading, data, error, errorNum, sendRequest] = useRequest();\n    const [locationInfo, setLocationInfo] = useState({})\n\n    const product_user_id = location.state[0].user_id\n\n    useEffect(() => {\n        sendRequest(`/api/products/product-location-info/${product_user_id}`, \"get\"); \n    }, [])\n\n    useEffect(() => {\n        if(data) {\n            setLocationInfo(data)\n        }\n    }, [data])\n\n    // console.log(locationInfo)\n\n    return (\n        <div>\n            {locationInfo.lat} {locationInfo.lgt}\n        </div>\n\n    )\n}\n\nexport default ProductDetails; ","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/profile/Profile\";\nimport Products from \"./components/Products\";\nimport Auth from \"./components/auth/Auth\";\nimport NotFoundPage from \"./components/NotFoundPage\";\nimport PublicProfile from \"./components/profile/PublicProfile\";\nimport ResetPassword from \"./components/auth/ResetPassword\";\nimport { ModalMsgContextProvider } from \"./context/ModalMsgContext\";\nimport ModalMsg from \"./components/UI/ModalMsg\";\nimport UserChatsPage from \"./components/chat/UserChatsPage\";\nimport Chat from \"./components/chat/Chat\";\nimport AddProduct from \"./components/AddProduct\"; \nimport UserProducts from './components/UserProducts'; \nimport ProductDetails from \"./components/ProductDetails\"; \n\nfunction App() {\n  return (\n    <ModalMsgContextProvider>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\">\n            <Auth view=\"login\" />\n          </Route>\n          <Route path=\"/signup\">\n            <Auth view=\"signup\" />\n          </Route>\n          <Route path=\"/profile\" component={Profile} exact />\n          <Route path=\"/add-product\" component={AddProduct} exact />\n          <Route path=\"/user-products\" component={UserProducts}/>\n          <Route path=\"/product-info\" component={ProductDetails} />\n          <Route path=\"/chats\" component={UserChatsPage} exact />\n          <Route path=\"/chats/:name\" component={Chat} />\n          <Route path=\"/profile/:addr\" component={PublicProfile} />\n          <Route path=\"/buy\" component={Products} />\n          <Route path=\"/reset_password\">\n            <ResetPassword reset={true} />\n          </Route>\n          <Route\n            path=\"/reset_password_confirm/:token\"\n            component={ResetPassword}\n          />\n          <Route path=\"*\" component={NotFoundPage} />\n        </Switch>\n      </Router>\n      <ModalMsg />\n    </ModalMsgContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}